
CREATE PROC [dbo].[UDSP_GET_SAVE_IPD_ADMISSION]  
@INPUT_TYPE VARCHAR(250),
@XML_DATA XML=null,
@XML_CONSULTATION_DATA xml=null,
@HOSPITAL_ID int=null,  
@CLINIC_ID int=null,  
@ADMISSION_NO INT=null,  
@DEPARTMENT_CODE INT=NULL,
@DEPARTMENT_NAME NVARCHAR(50)='', 
@OPD_CARD_NO int=null,  
@CASUALTY_NO int=null,  
@DOCTOR_CODE INT =NULL,  
@DOCTOR_NAME NVARCHAR(50)='',
@DATE DATETIME=NULL,
@REFERRED_BY_CODE INT =NULL,
@REFERRED_BY_NAME NVARCHAR(50)='',
@VALIDITY DATETIME=NULL,
@OLD_NO int=null,
@WARD_NO nvarchar(50)='',
@BED_NO NVARCHAR(45)='',
@GATE_PASS_NO varchar(50)='',
@ROOM_NO_CODE VARCHAR(50)='',
@ROOM_NO_NAME NVARCHAR(40)='',
@MLC_NO NVARCHAR(15)='',
@MLC_DATETIME DATETIME=NULL,
@MLC_URL NVARCHAR(250)=NULL, 
@DOCUMENT_NAME NVARCHAR(250)='',
@DOCUMENT_URL NVARCHAR(250)='',
@UHID INT=NULL,
@NAME NVARCHAR(50)='',
@MOBILE NVARCHAR(50)='',
@ALTERNATE_MOBILE NVARCHAR(50)='',
@GENDER CHAR(1)=NULL,
@DOB DATETIME=NULL,
@AGE_YY INT=NULL,
@AGE_MM INT=NULL,
@AGE_DD INT=NULL,
@AADHAAR_NO NVARCHAR(20)='',
@RELIGION_CODE INT=NULL,
@RELIGION_NAME NVARCHAR(50)='',
@MARITAL_STATUS CHAR(1)=NULL,
@EMAIL NVARCHAR(30)='',
@GUARDIAN NVARCHAR(50)='',
@FAMILY_INCOME varchar(150)='',
@OCCUPATION_CODE INT=NULL,
@OCCUPATION_NAME NVARCHAR(50)='',
@DIET NVARCHAR(50)='',
@PATIENT_CONDITION NVARCHAR(50)='',
@PATIENT_CATEGORY_CODE int=null,
@PATIENT_CATEGORY_NAME NVARCHAR(50)='',
@AUSHMAN_CARD_NO VARCHAR(20)='',
@BPL_CARD_NO VARCHAR(20)='',
@COMPANY_NAME varchar(250)='',
@EMPLOYEE_ID varchar(100)='',
@INSURANCE_COMPANY_NAME varchar(250)='',
@POLICY_NUMBER varchar(100)='',
@POLICY_AMOUNT float=null,
@HEIGHT FLOAT=NULL,
@WEIGHT FLOAT=NULL,
@BLOOD_GROUP NVARCHAR(4)='',
@APGAR INT=NULL,
@GROWTH NVARCHAR(150)='',
@WAIST NVARCHAR(50)='',
@OBESITY NVARCHAR(150)='',
@ADDRESS NVARCHAR(200)='',
@HOUSE_NO NVARCHAR(150)='',
@STREET_NAME NVARCHAR(150)='',
@STREET_NO NVARCHAR(150)='',
@LANDMARK NVARCHAR(150)='',
@LOCALITY_CODE INT=NULL,
@LOCALITY_NAME nvarchar(100)='',
@COUNTRY_CODE INT=NULL,
@COUNTRY_NAME NVARCHAR(50)='',
@STATE_CODE INT=NULL,
@STATE_NAME NVARCHAR(50)='',
@CITY_CODE INT=NULL,
@CITY_NAME NVARCHAR(50)='',
@PIN INT=NULL,
@IS_LITERATE bit=null,
@LANGUAGE_OF_CHOICE nvarchar(100)='',
@KIN_NAME NVARCHAR(50)='',
@KIN_RELATION_CODE INT=NULL,
@KIN_RELATION_NAME NVARCHAR(30)='',
@KIN_CONTACT_NO NVARCHAR(20)='',
@PHONE NVARCHAR(20)='',
@KIN_ADDRESS NVARCHAR(150)='',
@PREGNANCY bit=null,
@PRENATAL_CHECKUP bit=null,
@FULLTERM bit=null,
@LAST_MANTURAL_DATE DATETIME=NULL,
@EST_DELIVARY_DATE DATETIME=NULL,
@NOTE NVARCHAR(50)='',
@FNAME NVARCHAR(100)='',
@ADHAR_NO NVARCHAR(100)='',
@USER_ID INT=NULL,
@USER_NAME NVARCHAR(50)='',
@PATIENT_CATEGORY NVARCHAR(150)='',
@TRANSITION_TYPE NVARCHAR(150)='',
@PAYMODE VARCHAR(250)=NULL,
@PAID_AMOUNT VARCHAR(250)=NULL,
@BALANCE_AMOUNT VARCHAR(250)=NULL,
@OTHER_CHARGES_PER VARCHAR(250)=NULL,
@OTHER_CHARGES_AMOUNT VARCHAR(250)=NULL,
@INV_DISCOUNT_PERCENT VARCHAR(250)=NULL,
@INV_DISCOUNT_AMOUNT VARCHAR(250)=NULL,
@AMOUNT VARCHAR(250)=NULL,
@DISCOUNT VARCHAR(250)=NULL,
@TAXABLE_AMOUNT VARCHAR(250)=NULL,
@TAX_AMOUNT VARCHAR(250)=NULL,
@CASH_DISCOUNT VARCHAR(250)=NULL,
@NET_AMOUNT VARCHAR(250)=NULL,
@XML_DATA_ALLERGY XML=NULL,
@XML_DATA_PAST_HISTORY XML=NULL,
@XML_DATA_PERSONAL_HISTORY XML=NULL,
@XML_DATA_DISEASE XML=NULL,
@XML_DATA_INVESTIGATION XML=NULL,
@XML_DATA_PATIENT_COMPLAINT XML=NULL,
@XML_DATA_FAMILY_HISTORY XML=NULL,
@SERVICE_TYPE_NAME VARCHAR(150)='',
@CATEGORY_TYPE_NAME VARCHAR(150)='',
@WARD_CATEGORY_CODE VARCHAR(150)='',
@WARD_CATEGORY_NAME VARCHAR(150)='',
@BED_CATEGORY_CODE VARCHAR(150)='',
@BED_CATEGORY_NAME VARCHAR(150)='',
@PAYER_CODE VARCHAR(150)='',
@PAYER_NAME VARCHAR(150)='',
@HEALTH_CARD_NO VARCHAR(150)='',
@EMERGENCY_NAME VARCHAR(150)='',
@EMERGENCY_ADDRESS VARCHAR(150)='',
@EMERGENCY_CONTACT VARCHAR(150)='',
@REQUISITION VARCHAR(150)='1',
@SOURCE VARCHAR(150)='',
@WARD_NAME VARCHAR(150)='',


@SURGEON_CODE VARCHAR(100)='',
@SURGEON_NAME VARCHAR(max)='',
@ANESTHETIST_CODE VARCHAR(100)='',
@ANESTHETIST_NAME VARCHAR(max)='',

@DEPENDENT_NAME VARCHAR(50)='',
@RELATION_WITH_DEPENDENT_CODE VARCHAR(50)='',
@RELATION_WITH_DEPENDENT_NAME VARCHAR(30)='',
@RANK VARCHAR(150)='',
@PID_NO varchar(50)='',
@P_UNIT VARCHAR(150)='',
@R_ADDRESS  VARCHAR(250)='',
@XML_DATA_PROCEDURE XML=NULL,
@FROM_DATE varchar(80)='',
@TO_DATE varchar(80)='',

@DEPOSITE_DATE DATETIME=NULL,
@DEPOSITE_TIME varchar(50)='',
@DEPOSITOR_NAME  varchar(100)='',
@BANK_NAME  varchar(250)='',
@TRANSITION_NO  varchar(150)='',
@SPECIAL_INSTRUCTION  varchar(MAX)='',
@OPERATION  varchar(250)='',
@DIAGNOSIS  varchar(250)='',
@F20TYPE VARCHAR(150)='',
@HISTORY_PRESENT_ILLNESS VARCHAR(1000) = '',
@TREATMENT VARCHAR(1000) = '',
@PATIENT_RECORD NVARCHAR(MAX) = ''

AS  
BEGIN  
 DECLARE @RESULT INT  
 SET @RESULT=0  
	IF(CAST(UPPER(@INPUT_TYPE) AS VARCHAR)='SAVE')  
	BEGIN  
		BEGIN TRY  
		 BEGIN TRANSACTION 
		 DECLARE @MAX_CODE BIGINT 
		  ---------CODE GENERATE START HERE-------
					DECLARE @F_MAX_CODE VARCHAR(20)
					DECLARE @TRN_DATE DATETIME=GETDATE()
							
					DECLARE @TBL TABLE (ID VARCHAR(20))
					INSERT INTO @TBL
					EXEC UDSP_GET_TRN_CODE @HOSPITAL_ID,@CLINIC_ID,@F20TYPE,@TRN_DATE,0
					SET @F_MAX_CODE =(SELECT ID FROM @TBL)
							
					SET @MAX_CODE = @F_MAX_CODE
							
					-------------CODE GENERATE END HERE-----
				--SET @MAX_CODE=(SELECT MAX(LASTCODE)+1 FROM F20 WHERE HOSPITAL_ID=@HOSPITAL_ID AND CLINIC_ID=@CLINIC_ID AND  Type='IPD_ADMISSION')  
		 
				--INSERT INTO IPDADMISSION (HOSPITAL_ID,CLINIC_ID,ADMISSION_NO, DEPARTMENT_CODE, DEPARTMENT_NAME, OPD_CARD_NO, CASUALTY_NO, DOCTOR_CODE, DOCTOR_NAME, DATE, REFERRED_BY_CODE, REFERRED_BY_NAME, VALIDITY, OLD_NO, WARD_NO, BED_NO, GATE_PASS_NO, ROOM_NO_CODE, ROOM_NO_NAME, MLC_NO, MLC_DATETIME,MLC_URL, UHID, NAME, GENDER, MOBILE, ALTERNATE_MOBILE, DOB, AGE_YY, AGE_MM, AGE_DD, IS_LITERATE,LANGUAGE_OF_CHOICE,AADHAAR_NO,RELIGION_CODE, RELIGION_NAME, MARITAL_STATUS, EMAIL, GUARDIAN, FAMILY_INCOME,  PATIENT_CATEGORY_CODE,PATIENT_CATEGORY_NAME,COMPANY_NAME,EMPLOYEE_ID,INSURANCE_COMPANY_NAME,POLICY_NUMBER,POLICY_AMOUNT,OCCUPATION_CODE, OCCUPATION_NAME, DIET, PATIENT_CONDITION, HEIGHT, WEIGHT, BLOOD_GROUP, APGAR, GROWTH, WAIST, OBESITY, LOCALITY_CODE,LOCALITY_NAME,ADDRESS, HOUSE_NO, STREET_NAME, STREET_NO, LANDMARK, COUNTRY_CODE, COUNTRY_NAME, STATE_CODE, STATE_NAME, CITY_CODE, CITY_NAME, PIN, KIN_NAME, KIN_RELATION_CODE, KIN_RELATION_NAME, KIN_CONTACT_NO, PHONE, KIN_ADDRESS, PREGNANCY, PRENATAL_CHECKUP, FULLTERM, LAST_MANTURAL_DATE,EST_DELIVARY_DATE, NOTE,USER_ID,USER_NAME,STATUS,TRANSITION_TYPE,AMOUNT,DISCOUNT,
				--TAXABLE_DISCOUNT,TAX_AMOUNT,CASH_DISCOUNT,PAID_AMOUNT,BALANCE_AMOUNT,OTHER_CHRG_PERCENT,
				--OTHER_CHRG_AMOUNT,INVOICE_DISC_PERCENT,INVOICE_DISC_AMOUNT,NET_AMOUNT,PAY_MODE,WARD_CATEGORY_CODE,WARD_CATEGORY_NAME,BED_CATEGORY_CODE,BED_CATEGORY_NAME,PAYER_CODE,PAYER_NAME,HEALTH_CARD_NO,EMERGENCY_NAME,EMERGENCY_ADDRESS,EMERGENCY_CONTACT,REQUISITION,SOURCE)
				--VALUES (@HOSPITAL_ID,@CLINIC_ID,@MAX_CODE,cast(@DEPARTMENT_CODE as nvarchar),@DEPARTMENT_NAME,cast(@OPD_CARD_NO as nvarchar),cast(@CASUALTY_NO as nvarchar),cast(@DOCTOR_CODE as nvarchar),@DOCTOR_NAME, cast(@DATE as nvarchar),cast(@REFERRED_BY_CODE as nvarchar),@REFERRED_BY_NAME, @VALIDITY,cast(@OLD_NO as nvarchar),cast(@WARD_NO as nvarchar),@BED_NO,cast(@GATE_PASS_NO as nvarchar),cast(@ROOM_NO_CODE as nvarchar), @ROOM_NO_NAME,@MLC_NO, cast(@MLC_DATETIME as nvarchar),@MLC_URL,cast(@UHID as nvarchar),@NAME,@GENDER, @MOBILE,@ALTERNATE_MOBILE,cast(@DOB as nvarchar),cast(@AGE_YY as nvarchar),cast(@AGE_MM as nvarchar),cast(@AGE_DD as nvarchar),cast(@IS_LITERATE as nvarchar),@LANGUAGE_OF_CHOICE,@AADHAAR_NO,cast(@RELIGION_CODE as nvarchar),@RELIGION_NAME,@MARITAL_STATUS,@EMAIL, @GUARDIAN, @FAMILY_INCOME,  cast( @PATIENT_CATEGORY_CODE as nvarchar),@PATIENT_CATEGORY_NAME,@COMPANY_NAME,@EMPLOYEE_ID,@INSURANCE_COMPANY_NAME,@POLICY_NUMBER,cast(@POLICY_AMOUNT as nvarchar),CAST(@OCCUPATION_CODE AS NVARCHAR), @OCCUPATION_NAME, @DIET, @PATIENT_CONDITION, CAST(@HEIGHT AS NVARCHAR), CAST(@WEIGHT AS NVARCHAR), @BLOOD_GROUP, CAST(@APGAR AS NVARCHAR), @GROWTH, @WAIST, @OBESITY,CAST(@LOCALITY_CODE AS NVARCHAR),@LOCALITY_NAME, @ADDRESS, @HOUSE_NO, @STREET_NAME, @STREET_NO, @LANDMARK,cast(@COUNTRY_CODE as nvarchar),@COUNTRY_NAME,cast(@STATE_CODE as nvarchar),@STATE_NAME,cast(@CITY_CODE as nvarchar),@CITY_NAME,cast(@PIN as nvarchar),@KIN_NAME,cast(@KIN_RELATION_CODE as nvarchar),@KIN_RELATION_NAME,@KIN_CONTACT_NO,@PHONE,@KIN_ADDRESS,cast(@PREGNANCY as int), cast(@PRENATAL_CHECKUP as int),cast(@FULLTERM as int),cast(@LAST_MANTURAL_DATE as nvarchar),cast(@EST_DELIVARY_DATE as nvarchar) ,@NOTE,@USER_ID,@USER_NAME,'A',@TRANSITION_TYPE,@AMOUNT,@DISCOUNT,@TAXABLE_AMOUNT,@TAX_AMOUNT,@CASH_DISCOUNT ,@PAID_AMOUNT,@BALANCE_AMOUNT ,@OTHER_CHARGES_PER ,@OTHER_CHARGES_AMOUNT ,@INV_DISCOUNT_PERCENT,@INV_DISCOUNT_AMOUNT,@NET_AMOUNT,@PAYMODE,@WARD_CATEGORY_CODE,@WARD_CATEGORY_NAME,@BED_CATEGORY_CODE,@BED_CATEGORY_NAME,@PAYER_CODE,@PAYER_NAME,@HEALTH_CARD_NO,@EMERGENCY_NAME,@EMERGENCY_ADDRESS,@EMERGENCY_CONTACT,'1',@SOURCE)
		
				INSERT INTO IPDADMISSION (HOSPITAL_ID,CLINIC_ID,ADMISSION_NO,DEPARTMENT_CODE,DEPARTMENT_NAME,OPD_CARD_NO, 
				CASUALTY_NO,DOCTOR_CODE,DOCTOR_NAME,DATE,REFERRED_BY_CODE,REFERRED_BY_NAME,VALIDITY,OLD_NO,WARD_NO,BED_NO,
				GATE_PASS_NO,ROOM_NO_CODE,ROOM_NO_NAME,MLC_NO,MLC_DATETIME,MLC_URL,UHID,NAME,GENDER,MOBILE,ALTERNATE_MOBILE,DOB,
				AGE_YY,AGE_MM,AGE_DD,IS_LITERATE,LANGUAGE_OF_CHOICE,AADHAAR_NO,RELIGION_CODE,RELIGION_NAME,MARITAL_STATUS,EMAIL,
				GUARDIAN,FAMILY_INCOME,PATIENT_CATEGORY_CODE,PATIENT_CATEGORY_NAME,COMPANY_NAME,EMPLOYEE_ID,INSURANCE_COMPANY_NAME,
				POLICY_NUMBER,POLICY_AMOUNT,OCCUPATION_CODE,OCCUPATION_NAME,DIET,PATIENT_CONDITION,HEIGHT,WEIGHT,BLOOD_GROUP,APGAR,
				GROWTH,WAIST,OBESITY,LOCALITY_CODE,LOCALITY_NAME,ADDRESS,HOUSE_NO,STREET_NAME,STREET_NO,LANDMARK,COUNTRY_CODE,
				COUNTRY_NAME,STATE_CODE,STATE_NAME,CITY_CODE,CITY_NAME,PIN,KIN_NAME,KIN_RELATION_CODE,KIN_RELATION_NAME,
				KIN_CONTACT_NO,PHONE,KIN_ADDRESS,PREGNANCY,PRENATAL_CHECKUP,FULLTERM,LAST_MANTURAL_DATE,EST_DELIVARY_DATE,NOTE,
				USER_ID,USER_NAME,STATUS,TRANSITION_TYPE,AMOUNT,DISCOUNT,TAXABLE_DISCOUNT,TAX_AMOUNT,CASH_DISCOUNT,PAID_AMOUNT,
				BALANCE_AMOUNT,OTHER_CHRG_PERCENT,OTHER_CHRG_AMOUNT,INVOICE_DISC_PERCENT,INVOICE_DISC_AMOUNT,NET_AMOUNT,PAY_MODE,
				WARD_CATEGORY_CODE,WARD_CATEGORY_NAME,BED_CATEGORY_CODE,BED_CATEGORY_NAME,PAYER_CODE,PAYER_NAME,HEALTH_CARD_NO,
				EMERGENCY_NAME,EMERGENCY_ADDRESS,EMERGENCY_CONTACT,REQUISITION,SOURCE,AD_DEPARTMENT_CODE,AD_DEPARTMENT_NAME,
				AD_DOCTOR_CODE,AD_DOCTOR_NAME,AD_WARD_NO,AD_BED_NO,AD_ROOM_NO_CODE,AD_ROOM_NO_NAME,AD_WARD_CATEGORY_CODE,
				AD_WARD_CATEGORY_NAME,AD_BED_CATEGORY_CODE,AD_BED_CATEGORY_NAME,WORD_NAME,AD_WORD_NAME,SURGEON_CODE,SURGEON_NAME,
				ANESTHETIST_CODE,ANESTHETIST_NAME,DEPENDENT_NAME,RELATION_WITH_DEPENDENT_NAME,RANK,PID_NO,P_UNIT,R_ADDRESS,
				DEPOSITE_DATE,DEPOSITE_TIME,DEPOSITOR_NAME,BANK_NAME,TRANSITION_NO,SPECIAL_INSTRUCTION,OPERATION,DIAGNOSIS,
				RELATION_WITH_DEPENDENT_CODE,HISTORY_PRESENT_ILLNESS,TREATMENT,PATIENT_RECORD
				)
				VALUES 
				(@HOSPITAL_ID,@CLINIC_ID,@MAX_CODE,cast(@DEPARTMENT_CODE as nvarchar),@DEPARTMENT_NAME,
				cast(@OPD_CARD_NO as nvarchar),cast(@CASUALTY_NO as nvarchar),cast(@DOCTOR_CODE as nvarchar),@DOCTOR_NAME, 
				cast(@DATE as nvarchar),cast(@REFERRED_BY_CODE as nvarchar),@REFERRED_BY_NAME, @VALIDITY,cast(@OLD_NO as nvarchar),
				cast(@WARD_NO as nvarchar),@BED_NO,cast(@GATE_PASS_NO as nvarchar),cast(@ROOM_NO_CODE as nvarchar),@ROOM_NO_NAME,
				@MLC_NO,cast(@MLC_DATETIME as nvarchar),@MLC_URL,cast(@UHID as nvarchar),@NAME,@GENDER,@MOBILE,@ALTERNATE_MOBILE,
				cast(@DOB as nvarchar),cast(@AGE_YY as nvarchar),cast(@AGE_MM as nvarchar),cast(@AGE_DD as nvarchar),
				cast(@IS_LITERATE as nvarchar),@LANGUAGE_OF_CHOICE,@AADHAAR_NO,cast(@RELIGION_CODE as nvarchar),@RELIGION_NAME,
				@MARITAL_STATUS,@EMAIL, @GUARDIAN, @FAMILY_INCOME,cast( @PATIENT_CATEGORY_CODE as nvarchar),
				@PATIENT_CATEGORY_NAME,@COMPANY_NAME,@EMPLOYEE_ID,@INSURANCE_COMPANY_NAME,@POLICY_NUMBER,
				cast(@POLICY_AMOUNT as nvarchar),CAST(@OCCUPATION_CODE AS NVARCHAR),@OCCUPATION_NAME,@DIET,@PATIENT_CONDITION,
				CAST(@HEIGHT AS NVARCHAR),CAST(@WEIGHT AS NVARCHAR),@BLOOD_GROUP,CAST(@APGAR AS NVARCHAR),@GROWTH,@WAIST,@OBESITY,
				CAST(@LOCALITY_CODE AS NVARCHAR),@LOCALITY_NAME, @ADDRESS, @HOUSE_NO, @STREET_NAME, @STREET_NO, @LANDMARK,
				cast(@COUNTRY_CODE as nvarchar),@COUNTRY_NAME,cast(@STATE_CODE as nvarchar),@STATE_NAME,cast(@CITY_CODE as nvarchar),
				@CITY_NAME,cast(@PIN as nvarchar),@KIN_NAME,cast(@KIN_RELATION_CODE as nvarchar),@KIN_RELATION_NAME,@KIN_CONTACT_NO,
				@PHONE,@KIN_ADDRESS,cast(@PREGNANCY as int), cast(@PRENATAL_CHECKUP as int),cast(@FULLTERM as int),
				cast(@LAST_MANTURAL_DATE as nvarchar),cast(@EST_DELIVARY_DATE as nvarchar) ,@NOTE,@USER_ID,@USER_NAME,'A',
				@TRANSITION_TYPE,@AMOUNT,@DISCOUNT,@TAXABLE_AMOUNT,@TAX_AMOUNT,@CASH_DISCOUNT ,@PAID_AMOUNT,@BALANCE_AMOUNT,
				@OTHER_CHARGES_PER ,@OTHER_CHARGES_AMOUNT,@INV_DISCOUNT_PERCENT,@INV_DISCOUNT_AMOUNT,@NET_AMOUNT,@PAYMODE,
				@WARD_CATEGORY_CODE,@WARD_CATEGORY_NAME,@BED_CATEGORY_CODE,@BED_CATEGORY_NAME,@PAYER_CODE,@PAYER_NAME,@HEALTH_CARD_NO,
				@EMERGENCY_NAME,@EMERGENCY_ADDRESS,@EMERGENCY_CONTACT,'1',@SOURCE,cast(@DEPARTMENT_CODE as nvarchar),@DEPARTMENT_NAME,
				cast(@DOCTOR_CODE as nvarchar),@DOCTOR_NAME,cast(@WARD_NO as nvarchar),@BED_NO,cast(@ROOM_NO_CODE as nvarchar),
				@ROOM_NO_NAME,@WARD_CATEGORY_CODE,@WARD_CATEGORY_NAME,@BED_CATEGORY_CODE,@BED_CATEGORY_NAME,@WARD_NAME,@WARD_NAME,
				@SURGEON_CODE,@SURGEON_NAME,@ANESTHETIST_CODE,@ANESTHETIST_NAME,@DEPENDENT_NAME,@RELATION_WITH_DEPENDENT_NAME,@RANK,
				@PID_NO,@P_UNIT,@R_ADDRESS,@DEPOSITE_DATE,@DEPOSITE_TIME,@DEPOSITOR_NAME,@BANK_NAME,
				@TRANSITION_NO,	@SPECIAL_INSTRUCTION,@OPERATION,@DIAGNOSIS,
				@RELATION_WITH_DEPENDENT_CODE,@HISTORY_PRESENT_ILLNESS,@TREATMENT,@PATIENT_RECORD
				)
		
				UPDATE BED_MASTER  SET BED_OCCUPANCY_STATUS='OCCUPIED',STATUS ='O' WHERE CODE=@BED_NO AND WARD_CATEGORY_CODE=@WARD_CATEGORY_CODE 
                --UPDATE BED_MASTER  SET BED_OCCUPANCY_STATUS='OCCUPIED',STATUS ='O' WHERE ROOM_NO=@ROOM_NO_CODE AND BED_NO=@BED_NO AND WARD_CODE=@WARD_NO AND DEPARTMENT_CODE=@DEPARTMENT_CODE
				--select *From BED_MASTER
		
					DECLARE @HDOC INT				
					EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XML_DATA
					IF OBJECT_ID('tempdb..##TEMP_IPD_EDUCATION_SAVE') IS NOT NULL
					BEGIN
						DROP TABLE ##TEMP_IPD_EDUCATION_SAVE					
					END	
				
					CREATE TABLE ##TEMP_IPD_EDUCATION_SAVE
					(
						
						IPD_EDU_NAME nvarchar(250),
						IPD_UNIVERSITY_NAME nvarchar(250),
						IPD_EDU_MARKS float,
						IPD_EDU_PASSING_YEAR int
					)

					INSERT INTO ##TEMP_IPD_EDUCATION_SAVE
					(
						IPD_EDU_NAME,IPD_UNIVERSITY_NAME,IPD_EDU_MARKS,IPD_EDU_PASSING_YEAR
					)

					SELECT
					
					[Table].[Column].value('IPD_EDU_NAME [1]', 'varchar(250)') as 'IPD_EDU_NAME ',
					[Table].[Column].value('IPD_UNIVERSITY_NAME [1]', 'varchar(250)') as 'IPD_UNIVERSITY_NAME ',
					[Table].[Column].value('IPD_EDU_MARKS [1]', 'float') as 'IPD_EDU_MARKS ',
					[Table].[Column].value('IPD_EDU_PASSING_YEAR [1]', 'int') as 'IPD_EDU_PASSING_YEAR '
					FROM @XML_DATA.nodes('/DATASET/RECORD') as [Table]([Column])
				
					INSERT INTO IPD_EDUCATION_DETAIL (HOSPITAL_ID,CLINIC_ID,IPD_CARD_NO,IPD_EDU_NAME,IPD_UNIVERSITY_NAME,IPD_EDU_MARKS,IPD_EDU_PASSING_YEAR,USER_ID,USER_NAME,STATUS)
					select @HOSPITAL_ID,@CLINIC_ID,@MAX_CODE,IPD_EDU_NAME,IPD_UNIVERSITY_NAME,IPD_EDU_MARKS,IPD_EDU_PASSING_YEAR,@USER_ID,@USER_NAME,'A' from ##TEMP_IPD_EDUCATION_SAVE
					
  
   -----------------------------PROCEDURE SAVE--------------------------------------------------------------------

   
				DECLARE @HDOC_PROCEDURE INT				
				EXEC SP_XML_PREPAREDOCUMENT @HDOC_PROCEDURE OUTPUT, @XML_DATA_PROCEDURE
				IF OBJECT_ID('tempdb..##TEMP_PROCEDURE_SAVE') IS NOT NULL
				BEGIN
					DROP TABLE ##TEMP_PROCEDURE_SAVE					
				END	
			
				CREATE TABLE ##TEMP_PROCEDURE_SAVE
				(					
					PROCEDURE_CODE VARCHAR(12),
					PROCEDURE_NAME VARCHAR(MAX)
				)

				INSERT INTO ##TEMP_PROCEDURE_SAVE
				(
					PROCEDURE_CODE,PROCEDURE_NAME
				)

				SELECT				
				[Table].[Column].value('PROCEDURE_CODE [1]', 'varchar(12)') as 'PROCEDURE_CODE ',
				[Table].[Column].value('PROCEDURE_NAME [1]', 'varchar(max)') as 'PROCEDURE_NAME '
				FROM @XML_DATA_PROCEDURE.nodes('/DATASET/RECORD') as [Table]([Column])
				--select * from ##TEMP_PROCEDURE_SAVE
				
				INSERT INTO IPD_PROCEDURE_DETAIL (HOSPITAL_ID,CLINIC_ID,IPD_CODE,IPD_PROCEDURE_CODE,IPD_PROCEDURE_NAME,USERID,DATECREATED)
				SELECT @HOSPITAL_ID,@CLINIC_ID,@MAX_CODE,PROCEDURE_CODE, PROCEDURE_NAME,@USER_ID,GETDATE() from ##TEMP_PROCEDURE_SAVE
				--select *From IPD_PROCEDURE_DETAIL

				-----------------------------------------------------------
		-------------------------------------------------------------------------------------------------


				DECLARE @HDOC_INVESTIGATION INT				
				EXEC SP_XML_PREPAREDOCUMENT @HDOC_INVESTIGATION OUTPUT, @XML_DATA_INVESTIGATION
				IF OBJECT_ID('tempdb..##TEMP_INVESTIGATION_SAVE') IS NOT NULL
				BEGIN
					DROP TABLE ##TEMP_INVESTIGATION_SAVE					
				END	
			
				CREATE TABLE ##TEMP_INVESTIGATION_SAVE
				(
					ADVISEDINVESTIGATION_NAME VARCHAR(MAX),
					ADVISEDINVESTIGATION_CODE VARCHAR(12)
				)

				INSERT INTO ##TEMP_INVESTIGATION_SAVE
				(
					ADVISEDINVESTIGATION_CODE,ADVISEDINVESTIGATION_NAME
				)

				SELECT				
				[Table].[Column].value('ADVISEDINVESTIGATION_CODE [1]', 'varchar(12)') as 'ADVISEDINVESTIGATION_CODE ',
				[Table].[Column].value('ADVISEDINVESTIGATION_NAME [1]', 'varchar(max)') as 'ADVISEDINVESTIGATION_NAME '
				FROM @XML_DATA_INVESTIGATION.nodes('/DATASET/RECORD') as [Table]([Column])
				--select * from ##TEMP_INVESTIGATION_SAVE
				INSERT INTO IPD_ADVISED_INVESTIGATION (HOSPITAL_ID,CLINIC_ID,IPD_CODE,IPD_ADVISE_INVEST_CODE,IPD_ADVISE_INVES_NAME,USERID,DATECREATED)
				SELECT @HOSPITAL_ID,@CLINIC_ID,@MAX_CODE,ADVISEDINVESTIGATION_CODE, ADVISEDINVESTIGATION_NAME,@USER_ID,GETDATE() from ##TEMP_INVESTIGATION_SAVE
				--select *From IPD_ADVISED_INVESTIGATION

				------------------------------------------------------------------------------------------------------------------------

				DECLARE @HDOC_ALLERGY INT				
				EXEC SP_XML_PREPAREDOCUMENT @HDOC_ALLERGY OUTPUT, @XML_DATA_ALLERGY
				IF OBJECT_ID('tempdb..##TEMP_PRESCRIPTION_ALLERGY_SAVE') IS NOT NULL
				BEGIN
					DROP TABLE ##TEMP_PRESCRIPTION_ALLERGY_SAVE					
				END	
			
				CREATE TABLE ##TEMP_PRESCRIPTION_ALLERGY_SAVE
				(
					ALLERGY_CODE VARCHAR(12),
					ALLERGY_TYPE char(1),
					SINCE SMALLINT,
					UNIT_CODE varchar(12),
					REMARKS VARCHAR(250),
					ALLERGY_NAME VARCHAR(MAX)
				)

				INSERT INTO ##TEMP_PRESCRIPTION_ALLERGY_SAVE
				(
					ALLERGY_CODE,ALLERGY_TYPE,SINCE,UNIT_CODE,REMARKS,ALLERGY_NAME
				)

				SELECT
				
				[Table].[Column].value('ALLERGY_CODE [1]', 'varchar(250)') as 'ALLERGY_CODE ',
				[Table].[Column].value('ALLERGY_TYPE [1]', 'char(1)') as 'ALLERGY_TYPE ',
				[Table].[Column].value('SINCE [1]', 'SMALLINT') as 'SINCE',
				[Table].[Column].value('UNIT_CODE [1]', 'VARCHAR(12)') as 'UNIT_CODE',
				[Table].[Column].value('REMARKS [1]', 'VARCHAR(250)') as 'REMARKS ',
				[Table].[Column].value('ALLERGY_NAME [1]', 'VARCHAR(MAX)') as 'ALLERGY_NAME '
				FROM @XML_DATA_ALLERGY.nodes('/DATASET/RECORD') as [Table]([Column])
				
				INSERT INTO IPD_ALLERGY (HOSPITAL_ID,CLINIC_ID,IPD_CODE,ALLERGY_CODE,ALLERGY_TYPE,SINCE, UNIT, REMARKS,USER_ID,DATE_CREATED,ALLERGY_NAME)
				select @HOSPITAL_ID,@CLINIC_ID,@MAX_CODE,ALLERGY_CODE, ALLERGY_TYPE, SINCE, UNIT_CODE, REMARKS,@USER_ID,GETDATE(),ALLERGY_NAME from ##TEMP_PRESCRIPTION_ALLERGY_SAVE

			-------------------------------------------------------------------------------------------------

			-------------------------------------------------------------------------------------------------
				EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XML_DATA_PAST_HISTORY
				IF OBJECT_ID('tempdb..##TEMP_PRESCRIPTION_PASTHISTORY_SAVE') IS NOT NULL
				BEGIN
					DROP TABLE ##TEMP_PRESCRIPTION_PASTHISTORY_SAVE					
				END	
			
				CREATE TABLE ##TEMP_PRESCRIPTION_PASTHISTORY_SAVE
				(
					HISTORY_CODE VARCHAR(12),
					HISTORY_TYPE VARCHAR(1),
					SINCE VARCHAR(12),UNIT VARCHAR(12),
					REMARKS VARCHAR(250),
					HISTORY_NAME VARCHAR(MAX)
				)

				INSERT INTO ##TEMP_PRESCRIPTION_PASTHISTORY_SAVE
				(
					HISTORY_CODE,HISTORY_TYPE,SINCE,UNIT,REMARKS,HISTORY_NAME
				)

				SELECT
				
				[Table].[Column].value('HISTORY_CODE [1]', 'VARCHAR(12)') as 'HISTORY_CODE ',
				[Table].[Column].value('HISTORY_TYPE [1]', 'VARCHAR(1)') as 'HISTORY_TYPE ',
				[Table].[Column].value('SINCE [1]', 'VARCHAR(12)') as 'SINCE ',
				[Table].[Column].value('UNIT [1]', 'VARCHAR(12)') as 'UNIT ',
				[Table].[Column].value('REMARKS [1]', 'VARCHAR(250)') as 'REMARKS ',
				[Table].[Column].value('HISTORY_NAME [1]', 'VARCHAR(250)') as 'HISTORY_NAME '
				FROM @XML_DATA_PAST_HISTORY.nodes('/DATASET/RECORD') as [Table]([Column])
				
				INSERT INTO IPD_PAST_HISTORY (HOSPITAL_ID,CLINIC_ID, IPD_CODE,HISTORY_CODE,HISTORY_TYPE,SINCE,UNIT,REMARKS,USERID,DATECREATED,HISTORY_NAME)
				SELECT @HOSPITAL_ID,@CLINIC_ID,@MAX_CODE,HISTORY_CODE,HISTORY_TYPE,SINCE,UNIT,REMARKS,@USER_ID,GETDATE(),HISTORY_NAME from ##TEMP_PRESCRIPTION_PASTHISTORY_SAVE
			-------------------------------------------------------------------------------------------------
			-------------------------------------------------------------------------------------------------
				EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XML_DATA_PERSONAL_HISTORY
				IF OBJECT_ID('tempdb..##TEMP_PRESCRIPTION_PERSONALHISTORY_SAVE') IS NOT NULL
				BEGIN
					DROP TABLE ##TEMP_PRESCRIPTION_PERSONALHISTORY_SAVE					
				END	
			
				CREATE TABLE ##TEMP_PRESCRIPTION_PERSONALHISTORY_SAVE
				(
					PERSONAL_CODE VARCHAR(12) ,
					SINCE SMALLINT,
					UNIT VARCHAR(20),
					QTY VARCHAR(250),
					QTY_UNIT VARCHAR(250),
					REMARKS VARCHAR(250),
					PERSONAL_NAME VARCHAR(MAX)
				)

				INSERT INTO ##TEMP_PRESCRIPTION_PERSONALHISTORY_SAVE
				(
					PERSONAL_CODE,SINCE,UNIT,QTY,QTY_UNIT,REMARKS,PERSONAL_NAME
				)

				SELECT
				
				[Table].[Column].value('PERSONAL_CODE [1]', 'VARCHAR(12)') as 'PERSONAL_CODE ',
				[Table].[Column].value('SINCE [1]', 'SMALLINT') as 'SINCE ',
				[Table].[Column].value('UNIT [1]', 'VARCHAR(20)') as 'UNIT ',
				[Table].[Column].value('QTY [1]', 'VARCHAR(20)') as 'QTY ',
				[Table].[Column].value('QTY_UNIT [1]', 'VARCHAR(20)') as 'QTY_UNIT ',
				[Table].[Column].value('REMARKS [1]', 'VARCHAR(250)') as 'REMARKS ',
				[Table].[Column].value('PERSONAL_NAME [1]', 'VARCHAR(MAX)') as 'PERSONAL_NAME '
				FROM @XML_DATA_PERSONAL_HISTORY.nodes('/DATASET/RECORD') as [Table]([Column])
				
				INSERT INTO IPD_PERSONAL_HISTORY (HOSPITAL_ID,CLINIC_ID,IPD_CODE,PERSONAL_CODE,SINCE,UNIT,QTY,QTY_UNIT,REMARKS,USERID,DATECREATED,PERSONAL_NAME)
				select @HOSPITAL_ID,@CLINIC_ID,@MAX_CODE,PERSONAL_CODE,SINCE,UNIT,QTY,QTY_UNIT,REMARKS,@USER_ID,GETDATE(),PERSONAL_NAME from ##TEMP_PRESCRIPTION_PERSONALHISTORY_SAVE
			-------------------------------------------------------------------------------------------------
			-------------------------------------------------------------------------------------------------
				EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XML_DATA_DISEASE

				IF OBJECT_ID('tempdb..##TEMP_PRESCRIPTION_FAMILYHISTORY_SAVE') IS NOT NULL
				BEGIN
					DROP TABLE ##TEMP_PRESCRIPTION_FAMILYHISTORY_SAVE					
				END	
			
				CREATE TABLE ##TEMP_PRESCRIPTION_FAMILYHISTORY_SAVE
				(
					DISEASE_CODE VARCHAR(12),					
					SINCE SMALLINT,
					UNIT VARCHAR(20),					
					REMARKS VARCHAR(250),
					DISEASE_NAME VARCHAR(MAX),		
				)

				INSERT INTO ##TEMP_PRESCRIPTION_FAMILYHISTORY_SAVE
				(
					DISEASE_CODE,SINCE,UNIT,REMARKS,DISEASE_NAME
				)

				SELECT
				
				[Table].[Column].value('DISEASE_CODE [1]', 'VARCHAR(12)') as 'DISEASE_CODE ',				
				[Table].[Column].value('SINCE [1]', 'SMALLINT') as 'SINCE',
				[Table].[Column].value('UNIT [1]', 'VARCHAR(20)') as 'UNIT ',				
				[Table].[Column].value('REMARKS [1]', 'VARCHAR(250)') as 'REMARKS ',
				[Table].[Column].value('DISEASE_NAME [1]', 'VARCHAR(MAX)') as 'DISEASE_NAME '

				FROM @XML_DATA_DISEASE.nodes('/DATASET/RECORD') as [Table]([Column])
				
				INSERT INTO IPD_DISEASE (HOSPITAL_ID,CLINIC_ID,IPD_CODE,DISEASE_CODE,SINCE,UNIT,REMARKS,USERID,DATECREATED,DISEASE_NAME)
				select @HOSPITAL_ID,@CLINIC_ID,@MAX_CODE,DISEASE_CODE,SINCE,UNIT,REMARKS,@USER_ID,GETDATE(),DISEASE_NAME from ##TEMP_PRESCRIPTION_FAMILYHISTORY_SAVE
--
			-------------------------------------------------------------------------------------------------



--------------FAMILY HISTORY Table Insertion start from here--------------------------

					DECLARE @HDOC_FAMILY_HISTORY INT				
					EXEC SP_XML_PREPAREDOCUMENT @HDOC_FAMILY_HISTORY OUTPUT, @XML_DATA_FAMILY_HISTORY
					IF OBJECT_ID('tempdb..##FAMILYHISTORY_DETAIL') IS NOT NULL
					BEGIN
						DROP TABLE ##FAMILYHISTORY_DETAIL						
					END
					CREATE TABLE ##FAMILYHISTORY_DETAIL
					(
						FAMILYHISTORY_CODE varchar(10),						
						FAMILYHISTORY_NAME varchar(MAX),						
						FAMILYHISTORY_TYPE varchar(250),						
						FAMILYHISTORY_SINCE varchar(250),
						FAMILYHISTORY_UNIT varchar(250),
						FAMILYHISTORY_RELATIONSHIP varchar(250),
						FAMILYHISTORYHISTORY_REMARKS VARCHAR(MAX)
				    )
					INSERT INTO ##FAMILYHISTORY_DETAIL
					(
					--ID,
					FAMILYHISTORY_CODE,FAMILYHISTORY_NAME,FAMILYHISTORY_TYPE,FAMILYHISTORY_SINCE,FAMILYHISTORY_UNIT,FAMILYHISTORY_RELATIONSHIP,FAMILYHISTORYHISTORY_REMARKS
					)
					SELECT					
					[Table].[Column].value('FAMILYHISTORY_CODE [1]', 'varchar(250)') as 'FAMILYHISTORY_CODE',					
					[Table].[Column].value('FAMILYHISTORY_NAME[1]', 'varchar(250)') as 'FAMILYHISTORY_NAME',					
					[Table].[Column].value('FAMILYHISTORY_TYPE [1]', 'varchar(250)') as 'FAMILYHISTORY_TYPE',					
					[Table].[Column].value('FAMILYHISTORY_SINCE[1]', 'varchar(250)') as 'FAMILYHISTORY_SINCE',
					[Table].[Column].value('FAMILYHISTORY_UNIT[1]', 'varchar(250)') as 'FAMILYHISTORY_UNIT',
					[Table].[Column].value('FAMILYHISTORY_RELATIONSHIP[1]', 'varchar(250)') as 'FAMILYHISTORY_RELATIONSHIP',
					
					[Table].[Column].value('FAMILYHISTORYHISTORY_REMARKS[1]', 'varchar(250)') as 'FAMILYHISTORYHISTORY_REMARKS'	
					FROM @XML_DATA_FAMILY_HISTORY.nodes('/DATASET/RECORD') as [Table]([Column])
					INSERT INTO IPD_FAMILYHISTORY (HOSPITAL_ID,CLINIC_ID,IPD_CODE,HISTORY_CODE,HISTORY_TYPE,HISTORY_NAME,
					SINCE,UNIT,RELATION,REMARKS,USER_ID,DATE_CREATED)

					SELECT @HOSPITAL_ID,@CLINIC_ID,@MAX_CODE,FAMILYHISTORY_CODE,FAMILYHISTORY_TYPE,FAMILYHISTORY_NAME,FAMILYHISTORY_SINCE,FAMILYHISTORY_UNIT, 
					FAMILYHISTORY_RELATIONSHIP,FAMILYHISTORYHISTORY_REMARKS,@USER_ID,GETDATE() FROM ##FAMILYHISTORY_DETAIL
			--------------FAMILY HISTORY Table Insertion end from here--------------------------

			--------------FAMILY HISTORY Table Insertion start from here--------------------------

					DECLARE @HDOC_PATIENT_COMPLAINT INT				
					EXEC SP_XML_PREPAREDOCUMENT @HDOC_PATIENT_COMPLAINT OUTPUT, @XML_DATA_PATIENT_COMPLAINT
					IF OBJECT_ID('tempdb..##PATIENT_COMPLAINT_DETAIL') IS NOT NULL
					BEGIN
						DROP TABLE ##PATIENT_COMPLAINT_DETAIL						
					END
					CREATE TABLE ##PATIENT_COMPLAINT_DETAIL
					(
						PATIENTCOMPLAINT_CODE varchar(10),						
						PATIENTCOMPLAINT_NAME varchar(MAX),						
						PATIENTCOMPLAINT_SINCE varchar(250),						
						PATIENTCOMPLAINT_UNIT varchar(250),						
						PATIENTCOMPLAINT_REMARKS VARCHAR(MAX)
				    )
					INSERT INTO ##PATIENT_COMPLAINT_DETAIL
					(
					--ID,
					PATIENTCOMPLAINT_CODE,PATIENTCOMPLAINT_NAME,PATIENTCOMPLAINT_SINCE,PATIENTCOMPLAINT_UNIT,PATIENTCOMPLAINT_REMARKS
					)
					SELECT					
					[Table].[Column].value('PATIENTCOMPLAINT_CODE [1]', 'varchar(250)') as 'PATIENTCOMPLAINT_CODE',					
					[Table].[Column].value('PATIENTCOMPLAINT_NAME[1]', 'varchar(250)') as 'PATIENTCOMPLAINT_NAME',					
					[Table].[Column].value('PATIENTCOMPLAINT_SINCE [1]', 'varchar(250)') as 'PATIENTCOMPLAINT_SINCE',					
					[Table].[Column].value('PATIENTCOMPLAINT_UNIT[1]', 'varchar(250)') as 'PATIENTCOMPLAINT_UNIT',									
					[Table].[Column].value('PATIENTCOMPLAINT_REMARKS[1]', 'varchar(250)') as 'PATIENTCOMPLAINT_REMARKS'	
					FROM @XML_DATA_PATIENT_COMPLAINT.nodes('/DATASET/RECORD') as [Table]([Column])

					INSERT INTO IPD_COMPLAINT(HOSPITAL_ID,CLINIC_ID,IPD_CODE,COMPLAINT_CODE,COMPLAINT_NAME,SINCE,UNIT,REMARKS,USERID,DATE_CREATED)
					SELECT @HOSPITAL_ID,@CLINIC_ID,@MAX_CODE,PATIENTCOMPLAINT_CODE,PATIENTCOMPLAINT_NAME,PATIENTCOMPLAINT_SINCE,
					PATIENTCOMPLAINT_UNIT,PATIENTCOMPLAINT_REMARKS,@USER_ID,GETDATE()
					FROM ##PATIENT_COMPLAINT_DETAIL
			--------------FAMILY HISTORY Table Insertion end from here--------------------------

					-----------------------IPD SERVICE DETAIL----------------------------------------


					DECLARE @HDOC1 INT				
					EXEC SP_XML_PREPAREDOCUMENT @HDOC1 OUTPUT, @XML_CONSULTATION_DATA
					IF OBJECT_ID('tempdb..##TEMP_IPD_SERVICE') IS NOT NULL
					BEGIN
						DROP TABLE ##TEMP_IPD_SERVICE					
					END	
				
					CREATE TABLE ##TEMP_IPD_SERVICE
					(
						
						SERVICE_CODE nvarchar(250),
						DISCOUNT nvarchar(250),
						CASH_DISCOUNT nvarchar(250),
						IGST nvarchar(250),
						CGST nvarchar(250),
						SGST nvarchar(250),
						MISC_TAX nvarchar(250),
						MISC_CHARGES nvarchar(250),
						NET_AMOUNT nvarchar(250),
						SERVICE_NAME nvarchar(500),
						CHARGES nvarchar(500)


						
					)

					INSERT INTO ##TEMP_IPD_SERVICE
					(
						SERVICE_CODE,DISCOUNT,CASH_DISCOUNT,IGST,CGST,SGST,MISC_TAX,MISC_CHARGES,NET_AMOUNT,SERVICE_NAME,CHARGES
					)

					
					
					

					SELECT
					
					[Table].[Column].value('SERVICE_CODE [1]', 'varchar(250)') as 'SERVICE_CODE',
					[Table].[Column].value('DISCOUNT [1]', 'varchar(250)') as 'DISCOUNT',
					[Table].[Column].value('CASH_DISCOUNT [1]', 'varchar(250)') as 'CASH_DISCOUNT',

					[Table].[Column].value('IGST [1]', 'varchar(250)') as 'IGST',
					[Table].[Column].value('CGST [1]', 'varchar(250)') as 'CGST',
					[Table].[Column].value('SGST [1]', 'varchar(250)') as 'SGST',
					[Table].[Column].value('MISC_TAX [1]', 'varchar(250)') as 'MISC_TAX',
					[Table].[Column].value('MISC_CHARGES [1]', 'varchar(250)') as 'MISC_CHARGES',
					[Table].[Column].value('NET_AMOUNT [1]', 'varchar(250)') as 'NET_AMOUNT',
					[Table].[Column].value('SERVICE_NAME [1]', 'varchar(250)') as 'SERVICE_NAME',
					[Table].[Column].value('CHARGES [1]', 'varchar(250)') as 'CHARGES'
					FROM @XML_CONSULTATION_DATA.nodes('/DATASET/RECORD') as [Table]([Column])
					
					--SELECT * fROM ##TEMP_OPD_SERVICE

					INSERT INTO IPD_ADMISSION_SERVICE_DETAIL(
						HOSPITAL_ID,CLINIC_ID,ADMISSION_NO,SERVICE_CODE,SERVICE_TYPE ,SERVICE_CATEGORY,SERVICE_NAME,CHARGES,DISCOUNT,CASH_DISCOUNT,IGST,CGST ,SGST ,MISC_TAX,MISC_CHARGES,NET_AMOUNT,STATUS
					)
					
					SELECT	@HOSPITAL_ID,@CLINIC_ID,@MAX_CODE,SERVICE_CODE,'I','I',SERVICE_NAME,CHARGES,DISCOUNT,CASH_DISCOUNT,IGST,CGST,SGST,MISC_TAX,MISC_CHARGES,NET_AMOUNT,'A' FROM ##TEMP_IPD_SERVICE
					
					-----------------------END IPD SERVICE DETAIL----------------------------------------
				 SET  @RESULT=@MAX_CODE
					
				-- UPDATE F20 SET LASTCODE=@MAX_CODE WHERE TYPE='IPD_ADMISSION' AND HOSPITAL_ID=@HOSPITAL_ID AND CLINIC_ID=@CLINIC_ID  

				UPDATE PATIENT_REGISTRATION SET UHID=@UHID,FNAME=@NAME,GENDER=@GENDER,DOB=@DOB,MOBILE=@MOBILE,ALTERNATE_NO=@ALTERNATE_MOBILE,MARITAL_STATUS=@MARITAL_STATUS,RELIGION=@RELIGION_CODE,EMAIL=@EMAIL,FATHER_NAME=@GUARDIAN,AGE_YY=@AGE_YY,AGE_MM=@AGE_MM,AGE_DD=@AGE_DD,ADHAR_NO=@AADHAAR_NO,FAMILY_INCOME=@FAMILY_INCOME,PATIENT_CATEGORY=@PATIENT_CATEGORY_CODE,OCCUPATION_CODE=@OCCUPATION_CODE,HEIGHT=@HEIGHT,WEIGHT=@WEIGHT,BLOOD_GROUP=@BLOOD_GROUP,APGAR=@APGAR,GROWTH=@GROWTH,WAIST=@WAIST,OBESITY=@OBESITY,COUNTRY_CODE=@COUNTRY_CODE,STATE_CODE=@STATE_CODE,CITY_CODE=@CITY_CODE,PINCODE=@PIN,LOCALITY_CODE=@LOCALITY_CODE,LOCALITY_NAME=@LOCALITY_NAME ,
				DEPENDENT_NAME=@DEPENDENT_NAME,RELATION_WITH_DEPENDENT=@RELATION_WITH_DEPENDENT_NAME,RANK=@RANK,PID_NO=@PID_NO,UNIT=@P_UNIT
				WHERE UHID=@UHID
		 
				SELECT @RESULT  
       COMMIT TRANSACTION  
    END TRY  
    BEGIN CATCH  
       DECLARE
			@ErMessage NVARCHAR(2048),
			@ErSeverity INT,
			@ErState INT,
			@ErLine INT

 
			SELECT
			@ErMessage = ERROR_MESSAGE(),
			@ErSeverity = ERROR_SEVERITY(),
			@ErState = ERROR_STATE(),@ErLine=ERROR_LINE()

			RAISERROR (@ErMessage,
			@ErSeverity,
			@ErState )
			ROLLBACK TRANSACTION
    END CATCH  
END 

	ELSE IF(CAST(UPPER(@INPUT_TYPE) AS VARCHAR)='UPDATE')
	BEGIN
		BEGIN TRY  
		 BEGIN TRANSACTION  
			
			DECLARE @HDOC_EDUCATION_UPDATE INT				
					EXEC SP_XML_PREPAREDOCUMENT @HDOC_EDUCATION_UPDATE OUTPUT, @XML_DATA
					IF OBJECT_ID('tempdb..##TEMP_IPD_EDUCATION_UPDATE') IS NOT NULL
					BEGIN
						DROP TABLE ##TEMP_IPD_EDUCATION_UPDATE					
					END	
				
					CREATE TABLE ##TEMP_IPD_EDUCATION_UPDATE
					(
						
						IPD_EDU_NAME nvarchar(250),
						IPD_UNIVERSITY_NAME nvarchar(250),
						IPD_EDU_MARKS float,
						IPD_EDU_PASSING_YEAR int
					)

					INSERT INTO ##TEMP_IPD_EDUCATION_UPDATE
					(
						IPD_EDU_NAME,IPD_UNIVERSITY_NAME,IPD_EDU_MARKS,IPD_EDU_PASSING_YEAR
					)

					SELECT
					
					[Table].[Column].value('IPD_EDU_NAME [1]', 'nvarchar(250)') as 'IPD_EDU_NAME ',
					[Table].[Column].value('IPD_UNIVERSITY_NAME [1]', 'nvarchar(250)') as 'IPD_UNIVERSITY_NAME ',
					[Table].[Column].value('IPD_EDU_MARKS [1]', 'float') as 'IPD_EDU_MARKS ',
					[Table].[Column].value('IPD_EDU_PASSING_YEAR [1]', 'int') as 'IPD_EDU_PASSING_YEAR '
					FROM @XML_DATA.nodes('/DATASET/RECORD') as [Table]([Column])
					
					DELETE FROM IPD_EDUCATION_DETAIL WHERE IPD_CARD_NO=@ADMISSION_NO
					INSERT INTO IPD_EDUCATION_DETAIL (HOSPITAL_ID,CLINIC_ID,IPD_CARD_NO,IPD_EDU_NAME,IPD_UNIVERSITY_NAME,IPD_EDU_MARKS,IPD_EDU_PASSING_YEAR,USER_ID,USER_NAME,STATUS)
					SELECT @HOSPITAL_ID,@CLINIC_ID,@ADMISSION_NO,IPD_EDU_NAME,IPD_UNIVERSITY_NAME,IPD_EDU_MARKS,IPD_EDU_PASSING_YEAR,@USER_ID,@USER_NAME,'A' from ##TEMP_IPD_EDUCATION_UPDATE
					
					
			-----------------------------PROCEDURE UPDATE--------------------------------------------------------------------


				DECLARE @HDOC_PROCEDURE_UPDATE INT				
				EXEC SP_XML_PREPAREDOCUMENT @HDOC_PROCEDURE OUTPUT, @XML_DATA_PROCEDURE
				IF OBJECT_ID('tempdb..##TEMP_PROCEDURE_UPDATE') IS NOT NULL
				BEGIN
					DROP TABLE ##TEMP_PROCEDURE_UPDATE					
				END	
			
				CREATE TABLE ##TEMP_PROCEDURE_UPDATE
				(					
					PROCEDURE_CODE VARCHAR(12),
					PROCEDURE_NAME VARCHAR(MAX)
				)

				INSERT INTO ##TEMP_PROCEDURE_UPDATE
				(
					PROCEDURE_CODE,PROCEDURE_NAME
				)

				SELECT				
				[Table].[Column].value('PROCEDURE_CODE [1]', 'varchar(12)') as 'PROCEDURE_CODE ',
				[Table].[Column].value('PROCEDURE_NAME [1]', 'varchar(max)') as 'PROCEDURE_NAME '
				FROM @XML_DATA_PROCEDURE.nodes('/DATASET/RECORD') as [Table]([Column])				


				DELETE FROM IPD_PROCEDURE_DETAIL WHERE IPD_CODE=@ADMISSION_NO
				INSERT INTO IPD_PROCEDURE_DETAIL (HOSPITAL_ID,CLINIC_ID,IPD_CODE,IPD_PROCEDURE_CODE,IPD_PROCEDURE_NAME,USERID,DATECREATED)
				SELECT @HOSPITAL_ID,@CLINIC_ID,@ADMISSION_NO,PROCEDURE_CODE, PROCEDURE_NAME,@USER_ID,GETDATE() from ##TEMP_PROCEDURE_UPDATE
				--select *From IPD_PROCEDURE_DETAIL

				-----------------------------------------------------------



--------------FAMILY HISTORY Table Insertion start from here--------------------------

					DECLARE @HDOC_UPDATEFAMILY_HISTORY INT				
					EXEC SP_XML_PREPAREDOCUMENT @HDOC_UPDATEFAMILY_HISTORY OUTPUT, @XML_DATA_FAMILY_HISTORY
					IF OBJECT_ID('tempdb..##UPDATEFAMILYHISTORY_DETAIL') IS NOT NULL
					BEGIN
						DROP TABLE ##UPDATEFAMILYHISTORY_DETAIL						
					END
					CREATE TABLE ##UPDATEFAMILYHISTORY_DETAIL
					(
						FAMILYHISTORY_CODE varchar(10),						
						FAMILYHISTORY_NAME varchar(MAX),						
						FAMILYHISTORY_TYPE varchar(250),						
						FAMILYHISTORY_SINCE varchar(250),
						FAMILYHISTORY_UNIT varchar(250),
						FAMILYHISTORY_RELATIONSHIP varchar(250),
						FAMILYHISTORYHISTORY_REMARKS VARCHAR(MAX)
				    )
					INSERT INTO ##UPDATEFAMILYHISTORY_DETAIL
					(
					--ID,
					FAMILYHISTORY_CODE,FAMILYHISTORY_NAME,FAMILYHISTORY_TYPE,FAMILYHISTORY_SINCE,FAMILYHISTORY_UNIT,FAMILYHISTORY_RELATIONSHIP,FAMILYHISTORYHISTORY_REMARKS
					)
					SELECT					
					[Table].[Column].value('FAMILYHISTORY_CODE [1]', 'varchar(250)') as 'FAMILYHISTORY_CODE',					
					[Table].[Column].value('FAMILYHISTORY_NAME[1]', 'varchar(250)') as 'FAMILYHISTORY_NAME',					
					[Table].[Column].value('FAMILYHISTORY_TYPE [1]', 'varchar(250)') as 'FAMILYHISTORY_TYPE',					
					[Table].[Column].value('FAMILYHISTORY_SINCE[1]', 'varchar(250)') as 'FAMILYHISTORY_SINCE',
					[Table].[Column].value('FAMILYHISTORY_UNIT[1]', 'varchar(250)') as 'FAMILYHISTORY_UNIT',
					[Table].[Column].value('FAMILYHISTORY_RELATIONSHIP[1]', 'varchar(250)') as 'FAMILYHISTORY_RELATIONSHIP',
					
					[Table].[Column].value('FAMILYHISTORYHISTORY_REMARKS[1]', 'varchar(250)') as 'FAMILYHISTORYHISTORY_REMARKS'	
					FROM @XML_DATA_FAMILY_HISTORY.nodes('/DATASET/RECORD') as [Table]([Column])
					DELETE FROM IPD_FAMILYHISTORY WHERE IPD_CODE=@ADMISSION_NO AND HOSPITAL_ID=@HOSPITAL_ID AND CLINIC_ID=@CLINIC_ID
					INSERT INTO IPD_FAMILYHISTORY (HOSPITAL_ID,CLINIC_ID,IPD_CODE,HISTORY_CODE,HISTORY_TYPE,HISTORY_NAME,
					SINCE,UNIT,RELATION,REMARKS,USER_ID,DATE_CREATED)

					SELECT @HOSPITAL_ID,@CLINIC_ID,@ADMISSION_NO,FAMILYHISTORY_CODE,FAMILYHISTORY_TYPE,FAMILYHISTORY_NAME,FAMILYHISTORY_SINCE,FAMILYHISTORY_UNIT, 
					FAMILYHISTORY_RELATIONSHIP,FAMILYHISTORYHISTORY_REMARKS,@USER_ID,GETDATE() FROM ##UPDATEFAMILYHISTORY_DETAIL
			--------------FAMILY HISTORY Table Insertion end from here--------------------------

			--------------FAMILY HISTORY Table Insertion start from here--------------------------

					DECLARE @HDOC_UPDATE_PATIENT_COMPLAINT INT				
					EXEC SP_XML_PREPAREDOCUMENT @HDOC_UPDATE_PATIENT_COMPLAINT OUTPUT, @XML_DATA_PATIENT_COMPLAINT
					IF OBJECT_ID('tempdb..##UPDATEPATIENT_COMPLAINT_DETAIL') IS NOT NULL
					BEGIN
						DROP TABLE ##UPDATEPATIENT_COMPLAINT_DETAIL						
					END
					CREATE TABLE ##UPDATEPATIENT_COMPLAINT_DETAIL
					(
						PATIENTCOMPLAINT_CODE varchar(10),						
						PATIENTCOMPLAINT_NAME varchar(MAX),						
						PATIENTCOMPLAINT_SINCE varchar(250),						
						PATIENTCOMPLAINT_UNIT varchar(250),						
						PATIENTCOMPLAINT_REMARKS VARCHAR(MAX)
				    )
					INSERT INTO ##UPDATEPATIENT_COMPLAINT_DETAIL
					(
					--ID,
					PATIENTCOMPLAINT_CODE,PATIENTCOMPLAINT_NAME,PATIENTCOMPLAINT_SINCE,PATIENTCOMPLAINT_UNIT,PATIENTCOMPLAINT_REMARKS
					)
					SELECT					
					[Table].[Column].value('PATIENTCOMPLAINT_CODE [1]', 'varchar(250)') as 'PATIENTCOMPLAINT_CODE',					
					[Table].[Column].value('PATIENTCOMPLAINT_NAME[1]', 'varchar(250)') as 'PATIENTCOMPLAINT_NAME',					
					[Table].[Column].value('PATIENTCOMPLAINT_SINCE [1]', 'varchar(250)') as 'PATIENTCOMPLAINT_SINCE',					
					[Table].[Column].value('PATIENTCOMPLAINT_UNIT[1]', 'varchar(250)') as 'PATIENTCOMPLAINT_UNIT',									
					[Table].[Column].value('PATIENTCOMPLAINT_REMARKS[1]', 'varchar(250)') as 'PATIENTCOMPLAINT_REMARKS'	
					FROM @XML_DATA_PATIENT_COMPLAINT.nodes('/DATASET/RECORD') as [Table]([Column])
					DELETE FROM IPD_COMPLAINT WHERE IPD_CODE=@ADMISSION_NO AND HOSPITAL_ID=@HOSPITAL_ID AND CLINIC_ID=@CLINIC_ID
					INSERT INTO IPD_COMPLAINT(HOSPITAL_ID,CLINIC_ID,IPD_CODE,COMPLAINT_CODE,COMPLAINT_NAME,SINCE,UNIT,REMARKS,USERID,DATE_CREATED)
					SELECT @HOSPITAL_ID,@CLINIC_ID,@ADMISSION_NO,PATIENTCOMPLAINT_CODE,PATIENTCOMPLAINT_NAME,PATIENTCOMPLAINT_SINCE,
					PATIENTCOMPLAINT_UNIT,PATIENTCOMPLAINT_REMARKS,@USER_ID,GETDATE()
					FROM ##UPDATEPATIENT_COMPLAINT_DETAIL
			--------------FAMILY HISTORY Table Insertion end from here--------------------------

		-------------------------------------------------------------------------------------------------


				DECLARE @HDOC_UPDATEINVESTIGATION INT				
				EXEC SP_XML_PREPAREDOCUMENT @HDOC_UPDATEINVESTIGATION OUTPUT, @XML_DATA_INVESTIGATION
				IF OBJECT_ID('tempdb..##TEMP_UPDATEINVESTIGATION_SAVE') IS NOT NULL
				BEGIN
					DROP TABLE ##TEMP_UPDATEINVESTIGATION_SAVE					
				END	
			
				CREATE TABLE ##TEMP_UPDATEINVESTIGATION_SAVE
				(
					ADVISEDINVESTIGATION_NAME VARCHAR(MAX),
					ADVISEDINVESTIGATION_CODE VARCHAR(12)
				)

				INSERT INTO ##TEMP_UPDATEINVESTIGATION_SAVE
				(
					ADVISEDINVESTIGATION_CODE,ADVISEDINVESTIGATION_NAME
				)

				SELECT				
				[Table].[Column].value('ADVISEDINVESTIGATION_CODE [1]', 'varchar(12)') as 'ADVISEDINVESTIGATION_CODE ',
				[Table].[Column].value('ADVISEDINVESTIGATION_NAME [1]', 'varchar(max)') as 'ADVISEDINVESTIGATION_NAME '
				FROM @XML_DATA_INVESTIGATION.nodes('/DATASET/RECORD') as [Table]([Column])
				--select * from ##TEMP_INVESTIGATION_SAVE
				DELETE FROM IPD_ADVISED_INVESTIGATION WHERE IPD_CODE=@ADMISSION_NO AND HOSPITAL_ID=@HOSPITAL_ID AND CLINIC_ID=@CLINIC_ID
				INSERT INTO IPD_ADVISED_INVESTIGATION (HOSPITAL_ID,CLINIC_ID,IPD_CODE,IPD_ADVISE_INVEST_CODE,IPD_ADVISE_INVES_NAME,USERID,DATECREATED)
				SELECT @HOSPITAL_ID,@CLINIC_ID,@ADMISSION_NO,ADVISEDINVESTIGATION_CODE, ADVISEDINVESTIGATION_NAME,@USER_ID,GETDATE() from ##TEMP_UPDATEINVESTIGATION_SAVE
				--select *From IPD_ADVISED_INVESTIGATION

				------------------------------------------------------------------------------------------------------------------------

				DECLARE @HDOC_UPDATEALLERGY INT				
				EXEC SP_XML_PREPAREDOCUMENT @HDOC_UPDATEALLERGY OUTPUT, @XML_DATA_ALLERGY
				IF OBJECT_ID('tempdb..##TEMP_UPDATEPRESCRIPTION_ALLERGY_SAVE') IS NOT NULL
				BEGIN
					DROP TABLE ##TEMP_UPDATEPRESCRIPTION_ALLERGY_SAVE					
				END	
			
				CREATE TABLE ##TEMP_UPDATEPRESCRIPTION_ALLERGY_SAVE
				(
					ALLERGY_CODE VARCHAR(12),
					ALLERGY_TYPE char(1),
					SINCE SMALLINT,
					UNIT_CODE varchar(12),
					REMARKS VARCHAR(250),
					ALLERGY_NAME VARCHAR(MAX)
				)

				INSERT INTO ##TEMP_UPDATEPRESCRIPTION_ALLERGY_SAVE
				(
					ALLERGY_CODE,ALLERGY_TYPE,SINCE,UNIT_CODE,REMARKS,ALLERGY_NAME
				)

				SELECT
				
				[Table].[Column].value('ALLERGY_CODE [1]', 'varchar(250)') as 'ALLERGY_CODE ',
				[Table].[Column].value('ALLERGY_TYPE [1]', 'char(1)') as 'ALLERGY_TYPE ',
				[Table].[Column].value('SINCE [1]', 'SMALLINT') as 'SINCE',
				[Table].[Column].value('UNIT_CODE [1]', 'VARCHAR(12)') as 'UNIT_CODE',
				[Table].[Column].value('REMARKS [1]', 'VARCHAR(250)') as 'REMARKS ',
				[Table].[Column].value('ALLERGY_NAME [1]', 'VARCHAR(MAX)') as 'ALLERGY_NAME '
				FROM @XML_DATA_ALLERGY.nodes('/DATASET/RECORD') as [Table]([Column])
				DELETE FROM IPD_ALLERGY WHERE IPD_CODE=@ADMISSION_NO AND HOSPITAL_ID=@HOSPITAL_ID AND CLINIC_ID=@CLINIC_ID
				INSERT INTO IPD_ALLERGY (HOSPITAL_ID,CLINIC_ID,IPD_CODE,ALLERGY_CODE,ALLERGY_TYPE,SINCE, UNIT, REMARKS,USER_ID,DATE_CREATED,ALLERGY_NAME)
				select @HOSPITAL_ID,@CLINIC_ID,@ADMISSION_NO,ALLERGY_CODE, ALLERGY_TYPE, SINCE, UNIT_CODE, REMARKS,@USER_ID,GETDATE(),ALLERGY_NAME from ##TEMP_UPDATEPRESCRIPTION_ALLERGY_SAVE

			-------------------------------------------------------------------------------------------------

			-------------------------------------------------------------------------------------------------
				DECLARE @HDOC_UPDATE INT	
				EXEC SP_XML_PREPAREDOCUMENT @HDOC_UPDATE OUTPUT, @XML_DATA_PAST_HISTORY
				IF OBJECT_ID('tempdb..##TEMP_UPDATEPRESCRIPTION_PASTHISTORY_SAVE') IS NOT NULL
				BEGIN
					DROP TABLE ##TEMP_UPDATEPRESCRIPTION_PASTHISTORY_SAVE					
				END	
			
				CREATE TABLE ##TEMP_UPDATEPRESCRIPTION_PASTHISTORY_SAVE
				(
					HISTORY_CODE VARCHAR(12),
					HISTORY_TYPE VARCHAR(1),
					SINCE VARCHAR(12),UNIT VARCHAR(12),
					REMARKS VARCHAR(250),
					HISTORY_NAME VARCHAR(MAX)
				)

				INSERT INTO ##TEMP_UPDATEPRESCRIPTION_PASTHISTORY_SAVE
				(
					HISTORY_CODE,HISTORY_TYPE,SINCE,UNIT,REMARKS,HISTORY_NAME
				)

				SELECT
				
				[Table].[Column].value('HISTORY_CODE [1]', 'VARCHAR(12)') as 'HISTORY_CODE ',
				[Table].[Column].value('HISTORY_TYPE [1]', 'VARCHAR(1)') as 'HISTORY_TYPE ',
				[Table].[Column].value('SINCE [1]', 'VARCHAR(12)') as 'SINCE ',
				[Table].[Column].value('UNIT [1]', 'VARCHAR(12)') as 'UNIT ',
				[Table].[Column].value('REMARKS [1]', 'VARCHAR(250)') as 'REMARKS ',
				[Table].[Column].value('HISTORY_NAME [1]', 'VARCHAR(250)') as 'HISTORY_NAME '
				FROM @XML_DATA_PAST_HISTORY.nodes('/DATASET/RECORD') as [Table]([Column])
				DELETE FROM IPD_PAST_HISTORY WHERE IPD_CODE=@ADMISSION_NO AND HOSPITAL_ID=@HOSPITAL_ID AND CLINIC_ID=@CLINIC_ID
				INSERT INTO IPD_PAST_HISTORY (HOSPITAL_ID,CLINIC_ID, IPD_CODE,HISTORY_CODE,HISTORY_TYPE,SINCE,UNIT,REMARKS,USERID,DATECREATED,HISTORY_NAME)
				SELECT @HOSPITAL_ID,@CLINIC_ID,@ADMISSION_NO,HISTORY_CODE,HISTORY_TYPE,SINCE,UNIT,REMARKS,@USER_ID,GETDATE(),HISTORY_NAME from ##TEMP_UPDATEPRESCRIPTION_PASTHISTORY_SAVE
			-------------------------------------------------------------------------------------------------
			-------------------------------------------------------------------------------------------------
				DECLARE @HDOC_UPDATE_PERSONAL_HISTORY INT	
				EXEC SP_XML_PREPAREDOCUMENT @HDOC_UPDATE_PERSONAL_HISTORY OUTPUT, @XML_DATA_PERSONAL_HISTORY
				IF OBJECT_ID('tempdb..##TEMP_PRESCRIPTION_UPDATE_PERSONALHISTORY_SAVE') IS NOT NULL
				BEGIN
					DROP TABLE ##TEMP_PRESCRIPTION_UPDATE_PERSONALHISTORY_SAVE					
				END	
			
				CREATE TABLE ##TEMP_PRESCRIPTION_UPDATE_PERSONALHISTORY_SAVE
				(
					PERSONAL_CODE VARCHAR(12) ,
					SINCE SMALLINT,
					UNIT VARCHAR(20),
					QTY VARCHAR(250),
					QTY_UNIT VARCHAR(250),
					REMARKS VARCHAR(250),
					PERSONAL_NAME VARCHAR(MAX)
				)

				INSERT INTO ##TEMP_PRESCRIPTION_UPDATE_PERSONALHISTORY_SAVE
				(
					PERSONAL_CODE,SINCE,UNIT,QTY,QTY_UNIT,REMARKS,PERSONAL_NAME
				)

				SELECT
				
				[Table].[Column].value('PERSONAL_CODE [1]', 'VARCHAR(12)') as 'PERSONAL_CODE ',
				[Table].[Column].value('SINCE [1]', 'SMALLINT') as 'SINCE ',
				[Table].[Column].value('UNIT [1]', 'VARCHAR(20)') as 'UNIT ',
				[Table].[Column].value('QTY [1]', 'VARCHAR(20)') as 'QTY ',
				[Table].[Column].value('QTY_UNIT [1]', 'VARCHAR(20)') as 'QTY_UNIT ',
				[Table].[Column].value('REMARKS [1]', 'VARCHAR(250)') as 'REMARKS ',
				[Table].[Column].value('PERSONAL_NAME [1]', 'VARCHAR(MAX)') as 'PERSONAL_NAME '
				FROM @XML_DATA_PERSONAL_HISTORY.nodes('/DATASET/RECORD') as [Table]([Column])
				DELETE FROM IPD_PERSONAL_HISTORY WHERE IPD_CODE=@ADMISSION_NO AND HOSPITAL_ID=@HOSPITAL_ID AND CLINIC_ID=@CLINIC_ID
				INSERT INTO IPD_PERSONAL_HISTORY (HOSPITAL_ID,CLINIC_ID,IPD_CODE,PERSONAL_CODE,SINCE,UNIT,QTY,QTY_UNIT,REMARKS,USERID,DATECREATED,PERSONAL_NAME)
				select @HOSPITAL_ID,@CLINIC_ID,@ADMISSION_NO,PERSONAL_CODE,SINCE,UNIT,QTY,QTY_UNIT,REMARKS,@USER_ID,GETDATE(),PERSONAL_NAME from ##TEMP_PRESCRIPTION_UPDATE_PERSONALHISTORY_SAVE
			-------------------------------------------------------------------------------------------------
			-------------------------------------------------------------------------------------------------
				DECLARE @HDOC_UPDATE_FAMILYHISTORY INT	
				EXEC SP_XML_PREPAREDOCUMENT @HDOC_UPDATE_FAMILYHISTORY OUTPUT, @XML_DATA_DISEASE

				IF OBJECT_ID('tempdb..##TEMP_PRESCRIPTION_UPDATE_FAMILYHISTORY_SAVE') IS NOT NULL
				BEGIN
					DROP TABLE ##TEMP_PRESCRIPTION_UPDATE_FAMILYHISTORY_SAVE					
				END	
			
				CREATE TABLE ##TEMP_PRESCRIPTION_UPDATE_FAMILYHISTORY_SAVE
				(
					DISEASE_CODE VARCHAR(12),					
					SINCE SMALLINT,
					UNIT VARCHAR(20),					
					REMARKS VARCHAR(250),
					DISEASE_NAME VARCHAR(MAX),		
				)

				INSERT INTO ##TEMP_PRESCRIPTION_UPDATE_FAMILYHISTORY_SAVE
				(
					DISEASE_CODE,SINCE,UNIT,REMARKS,DISEASE_NAME
				)

				SELECT
				
				[Table].[Column].value('DISEASE_CODE [1]', 'VARCHAR(12)') as 'DISEASE_CODE ',				
				[Table].[Column].value('SINCE [1]', 'SMALLINT') as 'SINCE',
				[Table].[Column].value('UNIT [1]', 'VARCHAR(20)') as 'UNIT ',				
				[Table].[Column].value('REMARKS [1]', 'VARCHAR(250)') as 'REMARKS ',
				[Table].[Column].value('DISEASE_NAME [1]', 'VARCHAR(MAX)') as 'DISEASE_NAME '

				FROM @XML_DATA_DISEASE.nodes('/DATASET/RECORD') as [Table]([Column])
				DELETE FROM IPD_DISEASE WHERE IPD_CODE=@ADMISSION_NO AND HOSPITAL_ID=@HOSPITAL_ID AND CLINIC_ID=@CLINIC_ID
				INSERT INTO IPD_DISEASE (HOSPITAL_ID,CLINIC_ID,IPD_CODE,DISEASE_CODE,SINCE,UNIT,REMARKS,USERID,DATECREATED,DISEASE_NAME)
				select @HOSPITAL_ID,@CLINIC_ID,@ADMISSION_NO,DISEASE_CODE,SINCE,UNIT,REMARKS,@USER_ID,GETDATE(),DISEASE_NAME from ##TEMP_PRESCRIPTION_UPDATE_FAMILYHISTORY_SAVE
--
			-------------------------------------------------------------------------------------------------


					-------IPD SERVICES-----------------------------------------
					DECLARE @HDOC3 INT				
					EXEC SP_XML_PREPAREDOCUMENT @HDOC3 OUTPUT, @XML_CONSULTATION_DATA
					IF OBJECT_ID('tempdb..##TEMP_IPD_SERVICE_UPDATE') IS NOT NULL
					BEGIN
						DROP TABLE ##TEMP_IPD_SERVICE_UPDATE					
					END	
				
					CREATE TABLE ##TEMP_IPD_SERVICE_UPDATE
					(
						
						SERVICE_CODE nvarchar(250),
						DISCOUNT nvarchar(250),
						CASH_DISCOUNT nvarchar(250),
						IGST nvarchar(250),
						CGST nvarchar(250),
						SGST nvarchar(250),
						MISC_TAX nvarchar(250),
						MISC_CHARGES nvarchar(250),
						NET_AMOUNT nvarchar(250),
						SERVICE_NAME nvarchar(500),
						CHARGES nvarchar(500)


						
					)

					INSERT INTO ##TEMP_IPD_SERVICE_UPDATE
					(
						SERVICE_CODE,DISCOUNT,CASH_DISCOUNT,IGST,CGST,SGST,MISC_TAX,MISC_CHARGES,NET_AMOUNT,SERVICE_NAME,CHARGES
					)

					
					
					

					SELECT
					
					[Table].[Column].value('SERVICE_CODE [1]', 'varchar(250)') as 'SERVICE_CODE',
					[Table].[Column].value('DISCOUNT [1]', 'varchar(250)') as 'DISCOUNT',
					[Table].[Column].value('CASH_DISCOUNT [1]', 'varchar(250)') as 'CASH_DISCOUNT',

					[Table].[Column].value('IGST [1]', 'varchar(250)') as 'IGST',
					[Table].[Column].value('CGST [1]', 'varchar(250)') as 'CGST',
					[Table].[Column].value('SGST [1]', 'varchar(250)') as 'SGST',
					[Table].[Column].value('MISC_TAX [1]', 'varchar(250)') as 'MISC_TAX',
					[Table].[Column].value('MISC_CHARGES [1]', 'varchar(250)') as 'MISC_CHARGES',
					[Table].[Column].value('NET_AMOUNT [1]', 'varchar(250)') as 'NET_AMOUNT',
					[Table].[Column].value('SERVICE_NAME [1]', 'varchar(250)') as 'SERVICE_NAME',
					[Table].[Column].value('CHARGES [1]', 'varchar(250)') as 'CHARGES'
					FROM @XML_CONSULTATION_DATA.nodes('/DATASET/RECORD') as [Table]([Column])
					
					--SELECT * fROM ##TEMP_OPD_SERVICE
				   DELETE FROM IPD_ADMISSION_SERVICE_DETAIL WHERE ADMISSION_NO=@ADMISSION_NO AND HOSPITAL_ID=@HOSPITAL_ID AND CLINIC_ID=@CLINIC_ID

					INSERT INTO IPD_ADMISSION_SERVICE_DETAIL(
						HOSPITAL_ID,CLINIC_ID,ADMISSION_NO,SERVICE_CODE,SERVICE_TYPE ,SERVICE_CATEGORY,SERVICE_NAME,CHARGES,DISCOUNT,CASH_DISCOUNT,IGST,CGST ,SGST ,MISC_TAX,MISC_CHARGES,NET_AMOUNT,STATUS
					)
					
					SELECT	@HOSPITAL_ID,@CLINIC_ID,@ADMISSION_NO,SERVICE_CODE,'C','D',SERVICE_NAME,CHARGES,DISCOUNT,CASH_DISCOUNT,IGST,CGST,SGST,MISC_TAX,MISC_CHARGES,NET_AMOUNT,'A' FROM ##TEMP_IPD_SERVICE_UPDATE

					---------------END HERE---------------------------------
					UPDATE IPDADMISSION SET DEPARTMENT_CODE=cast(@DEPARTMENT_CODE as nvarchar),DEPARTMENT_NAME=@DEPARTMENT_NAME,OPD_CARD_NO=cast(@OPD_CARD_NO as nvarchar),CASUALTY_NO=cast(@CASUALTY_NO as nvarchar),DOCTOR_CODE=cast(@DOCTOR_CODE as nvarchar), DOCTOR_NAME=@DOCTOR_NAME, DATE=cast(@DATE as nvarchar), REFERRED_BY_CODE=cast(@REFERRED_BY_CODE as nvarchar), REFERRED_BY_NAME=@REFERRED_BY_NAME, VALIDITY=@VALIDITY, OLD_NO=cast(@OLD_NO as nvarchar), WARD_NO=cast(@WARD_NO as nvarchar), BED_NO=@BED_NO, GATE_PASS_NO=cast(@GATE_PASS_NO as nvarchar), ROOM_NO_CODE=cast(@ROOM_NO_CODE as nvarchar), ROOM_NO_NAME=@ROOM_NO_NAME, MLC_NO=@MLC_NO, MLC_DATETIME=cast(@MLC_DATETIME as nvarchar),MLC_URL=@MLC_URL, UHID=cast(@UHID as nvarchar), NAME=@NAME, GENDER=@GENDER,MOBILE=@MOBILE, ALTERNATE_MOBILE=@ALTERNATE_MOBILE, DOB=cast(@DOB as nvarchar), AGE_YY=cast(@AGE_YY as nvarchar), AGE_MM=cast(@AGE_MM as nvarchar), AGE_DD=cast(@AGE_DD as nvarchar),IS_LITERATE=cast(@IS_LITERATE as nvarchar),LANGUAGE_OF_CHOICE=@LANGUAGE_OF_CHOICE,AADHAAR_NO=@AADHAAR_NO,RELIGION_CODE=cast(@RELIGION_CODE as nvarchar), RELIGION_NAME=@RELIGION_NAME, MARITAL_STATUS=@MARITAL_STATUS, EMAIL=@EMAIL, GUARDIAN=@GUARDIAN, FAMILY_INCOME=@FAMILY_INCOME, PATIENT_CATEGORY_CODE=cast(@PATIENT_CATEGORY_CODE as nvarchar),PATIENT_CATEGORY_NAME=@PATIENT_CATEGORY_NAME,COMPANY_NAME=@COMPANY_NAME,EMPLOYEE_ID=@EMPLOYEE_ID,INSURANCE_COMPANY_NAME=@INSURANCE_COMPANY_NAME,POLICY_NUMBER=@POLICY_NUMBER,POLICY_AMOUNT=cast(@POLICY_AMOUNT as nvarchar),  OCCUPATION_CODE=cast(@OCCUPATION_CODE as nvarchar),OCCUPATION_NAME=@OCCUPATION_NAME, DIET=@DIET, PATIENT_CONDITION=@PATIENT_CONDITION, HEIGHT=cast(@HEIGHT as nvarchar),WEIGHT=cast(@WEIGHT as nvarchar), BLOOD_GROUP=@BLOOD_GROUP, APGAR=cast(@APGAR as nvarchar), GROWTH=@GROWTH, WAIST=@WAIST, OBESITY=@OBESITY, LOCALITY_CODE=CAST(@LOCALITY_CODE AS NVARCHAR),LOCALITY_NAME=@LOCALITY_NAME,ADDRESS=@ADDRESS, HOUSE_NO=@HOUSE_NO, STREET_NAME=@STREET_NAME,STREET_NO=@STREET_NO, LANDMARK=@LANDMARK, COUNTRY_CODE=cast(@COUNTRY_CODE as nvarchar), COUNTRY_NAME=@COUNTRY_NAME, STATE_CODE=cast(@STATE_CODE as nvarchar), STATE_NAME=@STATE_NAME, CITY_CODE=cast(@CITY_CODE as nvarchar), CITY_NAME=@CITY_NAME, PIN=cast(@PIN as nvarchar)
					,KIN_NAME=@KIN_NAME, KIN_RELATION_CODE=cast(@KIN_RELATION_CODE as nvarchar), KIN_RELATION_NAME=@KIN_RELATION_NAME, KIN_CONTACT_NO=@KIN_CONTACT_NO, PHONE=@PHONE, KIN_ADDRESS=@KIN_ADDRESS, PREGNANCY=@PREGNANCY, PRENATAL_CHECKUP=@PRENATAL_CHECKUP, FULLTERM=@FULLTERM, LAST_MANTURAL_DATE=cast(@LAST_MANTURAL_DATE as nvarchar), EST_DELIVARY_DATE=cast(@EST_DELIVARY_DATE as nvarchar), NOTE=@NOTE,USER_ID=@USER_ID,USER_NAME=@USER_NAME, TRANSITION_TYPE=@TRANSITION_TYPE,AMOUNT=@AMOUNT,DISCOUNT=@DISCOUNT,TAXABLE_DISCOUNT=@TAXABLE_AMOUNT,TAX_AMOUNT=@TAX_AMOUNT,CASH_DISCOUNT=@CASH_DISCOUNT,PAID_AMOUNT=@PAID_AMOUNT,BALANCE_AMOUNT=@BALANCE_AMOUNT,OTHER_CHRG_PERCENT=@OTHER_CHARGES_PER,
					OTHER_CHRG_AMOUNT=@OTHER_CHARGES_AMOUNT,INVOICE_DISC_PERCENT=@INV_DISCOUNT_PERCENT,INVOICE_DISC_AMOUNT=@INV_DISCOUNT_AMOUNT,NET_AMOUNT=@NET_AMOUNT,PAY_MODE=@PAYMODE ,EMERGENCY_NAME=@EMERGENCY_NAME, EMERGENCY_CONTACT=@EMERGENCY_CONTACT,EMERGENCY_ADDRESS=@EMERGENCY_ADDRESS,
					
					SURGEON_CODE=@SURGEON_CODE,SURGEON_NAME=@SURGEON_NAME,ANESTHETIST_CODE=@ANESTHETIST_CODE,ANESTHETIST_NAME=@ANESTHETIST_NAME,DEPENDENT_NAME=@DEPENDENT_NAME,RELATION_WITH_DEPENDENT_NAME=@RELATION_WITH_DEPENDENT_NAME,RANK=@RANK,PID_NO=@PID_NO,P_UNIT=@P_UNIT,R_ADDRESS=@R_ADDRESS,
					DEPOSITE_DATE=@DEPOSITE_DATE,DEPOSITE_TIME=@DEPOSITE_TIME,DEPOSITOR_NAME=@DEPOSITOR_NAME,BANK_NAME=@BANK_NAME,TRANSITION_NO=@TRANSITION_NO
					,SPECIAL_INSTRUCTION=@SPECIAL_INSTRUCTION,OPERATION=@OPERATION,DIAGNOSIS=@DIAGNOSIS,RELATION_WITH_DEPENDENT_CODE=@RELATION_WITH_DEPENDENT_CODE,HISTORY_PRESENT_ILLNESS=@HISTORY_PRESENT_ILLNESS,TREATMENT=@TREATMENT,PATIENT_RECORD=@PATIENT_RECORD
				     WHERE ADMISSION_NO=@ADMISSION_NO AND HOSPITAL_ID=@HOSPITAL_ID AND CLINIC_ID=@CLINIC_ID 

					UPDATE PATIENT_REGISTRATION SET FNAME=@NAME, GENDER=@GENDER,DOB=@DOB,MOBILE=@MOBILE,ALTERNATE_NO=@ALTERNATE_MOBILE,MARITAL_STATUS=@MARITAL_STATUS,RELIGION=@RELIGION_CODE,EMAIL=@EMAIL,FATHER_NAME=@GUARDIAN,AGE_YY=@AGE_YY,AGE_MM=@AGE_MM,AGE_DD=@AGE_DD,ADHAR_NO=@AADHAAR_NO,FAMILY_INCOME=@FAMILY_INCOME,PATIENT_CATEGORY=@PATIENT_CATEGORY_CODE,OCCUPATION_CODE=@OCCUPATION_CODE,HEIGHT=@HEIGHT,WEIGHT=@WEIGHT,BLOOD_GROUP=@BLOOD_GROUP,APGAR=@APGAR,GROWTH=@GROWTH,WAIST=@WAIST,OBESITY=@OBESITY,COUNTRY_CODE=@COUNTRY_CODE,STATE_CODE=@STATE_CODE,CITY_CODE=@CITY_CODE,PINCODE=@PIN,LOCALITY_CODE=@LOCALITY_CODE,LOCALITY_NAME=@LOCALITY_NAME ,
					DEPENDENT_NAME=@DEPENDENT_NAME,RELATION_WITH_DEPENDENT=@RELATION_WITH_DEPENDENT_NAME,RANK=@RANK,PID_NO=@PID_NO,UNIT=@P_UNIT
					WHERE UHID=@UHID
					
					DELETE FROM IPD_DOCUMENT_DETAILS WHERE IPD_ADMISSION_NO=@ADMISSION_NO
					SET  @RESULT=@ADMISSION_NO
					SELECT @ADMISSION_NO
			COMMIT TRANSACTION  
		END TRY  
		BEGIN CATCH  
			DECLARE
			@ErMessage1 NVARCHAR(2048),
			@ErSeverity1 INT,
			@ErState1 INT,
			@ErLine1 INT

 
			SELECT
			@ErMessage1 = ERROR_MESSAGE(),
			@ErSeverity1 = ERROR_SEVERITY(),
			@ErState1 = ERROR_STATE(),@ErLine=ERROR_LINE()

			RAISERROR (@ErMessage1,
			@ErSeverity1,
			@ErState1 )
			ROLLBACK TRANSACTION
		END CATCH  

	END 

		ELSE IF(CAST(UPPER(@INPUT_TYPE) AS VARCHAR)='SEARCH_ADMISSION')
		BEGIN
			SELECT UHID,ADMISSION_NO,NAME,AGE_YY,AGE_MM,AGE_DD,CASE WHEN GENDER='F' THEN 'Female' ELSE 'Male' END AS GENDER, * FROM IPDADMISSION WHERE  				
			UHID=(CASE WHEN (@UHID)>0 THEN @UHID ELSE UHID END) AND	
			ISNULL(PID_NO,0) LIKE(CASE WHEN(LEN(@PID_NO)>0)THEN @PID_NO + '%'  ELSE ISNULL(PID_NO,0)  END ) AND
			ADMISSION_NO=(CASE WHEN (@ADMISSION_NO) >0 THEN @ADMISSION_NO ELSE ADMISSION_NO END) AND 
		    NAME LIKE (CASE WHEN LEN(@NAME) >0 THEN @NAME + '%' ELSE NAME END) AND
			MOBILE LIKE (CASE WHEN LEN(@MOBILE)>0 THEN @MOBILE + '%' ELSE MOBILE END) 
			AND DATE BETWEEN CASE WHEN LEN(@FROM_DATE)>0 THEN DBO.DATE_ONLY(@FROM_DATE) ELSE DBO.DATE_ONLY(DATE) END AND CASE WHEN LEN(@TO_DATE)>0 THEN DBO.DATE_ONLY(@TO_DATE) ELSE DBO.DATE_ONLY(DATE) END 
			AND HOSPITAL_ID=@HOSPITAL_ID AND CLINIC_ID=@CLINIC_ID
		END

		ELSE IF(CAST(UPPER(@INPUT_TYPE) AS VARCHAR)='GET_BED_NO')
		BEGIN
			SELECT CODE,NAME FROM BED_MASTER WHERE WARD_CATEGORY_CODE=@WARD_CATEGORY_CODE AND ISNULL(BED_OCCUPANCY_STATUS,'VACANT')='VACANT'
		END


	ELSE IF(CAST(UPPER(@INPUT_TYPE) AS VARCHAR)='GETRECORD')
	BEGIN
		IF NOT EXISTS(SELECT ADMISSION_NO FROM IPDADMISSION WHERE ADMISSION_NO=@ADMISSION_NO AND HOSPITAL_ID=@HOSPITAL_ID AND CLINIC_ID=@CLINIC_ID)  
		BEGIN	
			
			SELECT ADMISSION_NO,DEPARTMENT_CODE, DEPARTMENT_NAME, OPD_CARD_NO, CASUALTY_NO, DOCTOR_CODE, DOCTOR_NAME, CASE WHEN CONVERT(VARCHAR,DATE,103)='01/01/1900' THEN '' ELSE CONVERT(VARCHAR,DATE,103) END AS DATE ,REFERRED_BY_CODE,REFERRED_BY_NAME,CASE WHEN CONVERT(VARCHAR,VALIDITY,103)='01/01/1900' THEN '' ELSE CONVERT(VARCHAR,VALIDITY,103) END AS VALIDITY  ,OLD_NO, WARD_NO, BED_NO, GATE_PASS_NO, ROOM_NO_CODE, ROOM_NO_NAME, MLC_NO, CASE WHEN CONVERT(VARCHAR,MLC_DATETIME,103)='01/01/1900' THEN '' ELSE CONVERT(VARCHAR,MLC_DATETIME,103) END AS MLC_DATETIME,MLC_URL, UHID, NAME,CASE WHEN GENDER='F' THEN 'Female' ELSE 'Male' END AS GENDER, MOBILE, ALTERNATE_MOBILE,CASE WHEN CONVERT(VARCHAR,DOB,103)='01/01/1900' THEN '' ELSE CONVERT(VARCHAR,DOB,103) END AS DOB  ,AGE_YY, AGE_MM, AGE_DD,IS_LITERATE,LANGUAGE_OF_CHOICE, AADHAAR_NO, RELIGION_CODE, RELIGION_NAME, MARITAL_STATUS, EMAIL, GUARDIAN,FAMILY_INCOME, PATIENT_CATEGORY_NAME, PATIENT_CATEGORY_CODE,COMPANY_NAME,EMPLOYEE_ID,INSURANCE_COMPANY_NAME,POLICY_NUMBER,POLICY_AMOUNT,OCCUPATION_CODE, OCCUPATION_NAME, DIET, PATIENT_CONDITION, HEIGHT, WEIGHT, BLOOD_GROUP, APGAR, GROWTH,WAIST, OBESITY,LOCALITY_CODE,LOCALITY_NAME , ADDRESS, HOUSE_NO, STREET_NAME, STREET_NO, LANDMARK, COUNTRY_CODE, COUNTRY_NAME, STATE_CODE, STATE_NAME, CITY_CODE, CITY_NAME, PIN, KIN_NAME, KIN_RELATION_CODE, KIN_RELATION_NAME, KIN_CONTACT_NO, PHONE, KIN_ADDRESS, PREGNANCY, PRENATAL_CHECKUP, FULLTERM,CASE WHEN CONVERT(VARCHAR,LAST_MANTURAL_DATE,103)='01/01/1900' THEN '' ELSE CONVERT(VARCHAR,LAST_MANTURAL_DATE,103) END AS LAST_MANTURAL_DATE,CASE WHEN CONVERT(VARCHAR,EST_DELIVARY_DATE,103)='01/01/1900' THEN '' ELSE CONVERT(VARCHAR,EST_DELIVARY_DATE,103) END AS EST_DELIVARY_DATE,TRANSITION_TYPE,NOTE,AMOUNT,DISCOUNT,TAXABLE_DISCOUNT,TAX_AMOUNT,CASH_DISCOUNT,PAID_AMOUNT,BALANCE_AMOUNT,OTHER_CHRG_PERCENT,
			OTHER_CHRG_PERCENT,OTHER_CHRG_AMOUNT,INVOICE_DISC_PERCENT,INVOICE_DISC_AMOUNT,NET_AMOUNT,PAY_MODE,SOURCE,WARD_CATEGORY_CODE,WARD_CATEGORY_NAME,BED_CATEGORY_CODE,BED_CATEGORY_NAME,PAYER_CODE,PAYER_NAME,HEALTH_CARD_NO,EMERGENCY_NAME,EMERGENCY_ADDRESS,EMERGENCY_CONTACT,
			 SURGEON_CODE, SURGEON_NAME, ANESTHETIST_CODE, ANESTHETIST_NAME, DEPENDENT_NAME, RELATION_WITH_DEPENDENT_CODE, RELATION_WITH_DEPENDENT_NAME, RANK, PID_NO, P_UNIT, R_ADDRESS,
			 CASE WHEN CONVERT(VARCHAR,DEPOSITE_DATE,103)='01/01/1900' THEN '' ELSE CONVERT(VARCHAR,DEPOSITE_DATE,103) END AS DEPOSITE_DATE,DEPOSITE_TIME,DEPOSITOR_NAME,BANK_NAME,TRANSITION_NO
			,SPECIAL_INSTRUCTION,DIAGNOSIS,OPERATION,HISTORY_PRESENT_ILLNESS,TREATMENT,PATIENT_RECORD FROM IPDADMISSION WHERE ADMISSION_NO=@ADMISSION_NO

			

			SELECT IPD_EDU_ID,IPD_EDU_NAME,IPD_UNIVERSITY_NAME,IPD_EDU_MARKS,IPD_EDU_PASSING_YEAR FROM IPD_EDUCATION_DETAIL WHERE IPD_CARD_NO=@ADMISSION_NO

			SELECT DOC_ID,DOCUMENT_NAME,DOCUMENT_URL FROM IPD_DOCUMENT_DETAILS WHERE IPD_ADMISSION_NO=@ADMISSION_NO
			SELECT * FROM IPD_ADMISSION_SERVICE_DETAIL WHERE ADMISSION_NO=@ADMISSION_NO


			SELECT * FROM IPD_ALLERGY WHERE IPD_CODE=@ADMISSION_NO
			SELECT * FROM  IPD_DISEASE WHERE IPD_CODE=@ADMISSION_NO
			SELECT * FROM IPD_PERSONAL_HISTORY WHERE IPD_CODE=@ADMISSION_NO
			SELECT * FROM IPD_PAST_HISTORY WHERE IPD_CODE=@ADMISSION_NO
			SELECT * FROM IPD_ADVISED_INVESTIGATION WHERE IPD_CODE=@ADMISSION_NO
			SELECT * FROM IPD_COMPLAINT WHERE IPD_CODE=@ADMISSION_NO
			SELECT * FROM IPD_FAMILYHISTORY WHERE IPD_CODE=@ADMISSION_NO

			SELECT * FROM IPD_PROCEDURE_DETAIL WHERE IPD_CODE=@ADMISSION_NO

		END
		ELSE 
		BEGIN
			SET  @RESULT=0
			SELECT @RESULT
		END 
	END 
	ELSE IF(CAST(UPPER(@INPUT_TYPE) AS VARCHAR)='SAVENEWPATIENTRECORD')

	BEGIN
		DECLARE @NEW_CODE BIGINT
		   ---------CODE GENERATE START HERE-------
					DECLARE @F_MAX_CODE1 VARCHAR(20)
					DECLARE @TRN_DATE1 DATETIME=GETDATE()
							
					DECLARE @TBL1 TABLE (ID VARCHAR(20))
					INSERT INTO @TBL1
					EXEC UDSP_GET_TRN_CODE @HOSPITAL_ID,@CLINIC_ID,@F20TYPE,@TRN_DATE1,0
							
					SET @F_MAX_CODE1 =(SELECT ID FROM @TBL1)
							
					SET @NEW_CODE = @F_MAX_CODE1
							
					-------------CODE GENERATE END HERE-----

		--SET @NEW_CODE=(SELECT MAX(LASTCODE)+1 FROM F20 WHERE HOSPITAL_ID=@HOSPITAL_ID AND CLINIC_ID=@CLINIC_ID AND  Type='UHID')  
		BEGIN TRY  
		BEGIN TRANSACTION  
			DECLARE @ALPHABET VARCHAR(36)
			SET @ALPHABET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
			DECLARE @PASS NVARCHAR(MAX)
			SET @PASS=(
			select 'PR-'+
			substring(@ALPHABET, convert(int, rand()*30), 2) + 
			substring(@ALPHABET, convert(int, rand()*30), 2) +
			substring(@ALPHABET, convert(int, rand()*30), 2) )

			INSERT INTO PATIENT_REGISTRATION(HOSPITAL_ID,CLINIC_ID,UHID,FNAME,GENDER,AGE_YY,ADHAR_NO,MOBILE,LOCALITY_CODE,LOCALITY_NAME,STATUS, PATIENT_CATEGORY,PASSWORD) 
			VALUES(@HOSPITAL_ID,@CLINIC_ID,@NEW_CODE,@FNAME,@GENDER,@AGE_YY,@ADHAR_NO,@MOBILE,@LOCALITY_CODE,@LOCALITY_NAME,'A',@PATIENT_CATEGORY,@PASS)
			SET  @RESULT=@NEW_CODE
			--UPDATE F20 SET LASTCODE=@NEW_CODE WHERE TYPE='UHID' AND HOSPITAL_ID=@HOSPITAL_ID AND CLINIC_ID=@CLINIC_ID  
			SELECT @RESULT  
   COMMIT TRANSACTION  
  END TRY  
  BEGIN CATCH  
   --ROLLBACK TRANSACTION  
			DECLARE
			@ErMessage2 NVARCHAR(2048),
			@ErSeverity2 INT,
			@ErState2 INT,
			@ErLine2 INT

 
			SELECT
			@ErMessage2 = ERROR_MESSAGE(),
			@ErSeverity2 = ERROR_SEVERITY(),
			@ErState2= ERROR_STATE(),@ErLine2=ERROR_LINE()

			RAISERROR (@ErMessage2,
			@ErSeverity2,
			@ErState2 )
			ROLLBACK TRANSACTION
  END CATCH  
END
ELSE IF(CAST(UPPER(@INPUT_TYPE) AS VARCHAR)='GETNEWRECORD')
	BEGIN
		SELECT UHID,FNAME,CASE WHEN GENDER ='M' THEN 'MALE' ELSE 'FEMALE' END AS GENDER,AGE_YY,LOCALITY_CODE,ADHAR_NO,MOBILE,* FROM PATIENT_REGISTRATION where UHID=@UHID	
	END


ELSE IF(CAST(UPPER(@INPUT_TYPE) AS VARCHAR)='BINDDEFAULTSERVICE')
	BEGIN
--			SELECT * FROM SERVICE_MASTER WHERE TRANSACTION_TYPE=2 AND HOSPITAL_ID=@HOSPITAL_ID
--			AND CLINIC_ID=@CLINIC_ID AND OPD_CHARGE>0
			SELECT DISTINCT SPD.IPD_CHARGE AS PRICE_OPD_CHARGE,* FROM SERVICE_MASTER SM 
			INNER JOIN SERVICE_PRICE_DETAIL SPD ON SM.SERVICE_CODE=SPD.SERVICE_CODE
			WHERE TRANSACTION_TYPE=4 AND SM.HOSPITAL_ID=1
			AND SM.CLINIC_ID=1 AND SERVICE_TYPE='I' AND SERVICE_CATEGORY='I' AND SPD.PATIENT_CATEGORY=@PATIENT_CATEGORY
	END

ELSE IF(CAST(UPPER(@INPUT_TYPE) AS VARCHAR)='SEARCH SERVICE LIST')
	BEGIN
		
		  SELECT CASE WHEN (@SERVICE_TYPE_NAME='MISCELLANEOUS' AND @CATEGORY_TYPE_NAME='Miscellaneous') THEN  SPD.MISC_CHARGES ELSE SPD.IPD_CHARGE END AS PRICE_SERVICE_CHARGES, SM.SERVICE_GROUP_CODE,SGM.NAME,TRANSACTION_TYPE=CASE SM.TRANSACTION_TYPE WHEN '1' THEN 'PATR' WHEN '2' THEN 'OPDC' WHEN '3' THEN 'CASU' end,* FROM SERVICE_MASTER SM
           LEFT JOIN SERVICE_GROUP_MASTER SGM ON SM.SERVICE_GROUP_CODE=SGM.SERVICE_GROUP_CODE
		    INNER JOIN SERVICE_PRICE_DETAIL SPD ON SM.SERVICE_CODE=SPD.SERVICE_CODE
            WHERE SM.HOSPITAL_ID=1 AND SM.CLINIC_ID=1 AND SPD.PATIENT_CATEGORY=@PATIENT_CATEGORY  AND ISNULL(SM.STATUS,'D')='A'
			AND SM.SERVICE_TYPE=(CASE WHEN @SERVICE_TYPE_NAME='LAB' THEN 'L' WHEN @SERVICE_TYPE_NAME='IPD' THEN 'I'
			WHEN @SERVICE_TYPE_NAME='CONSULTATION' THEN 'C' WHEN @SERVICE_TYPE_NAME='PROCEDURE' THEN 'P'
			WHEN @SERVICE_TYPE_NAME='MISCELLANEOUS' THEN 'M' WHEN @SERVICE_TYPE_NAME='OPD' THEN 'O' WHEN @SERVICE_TYPE_NAME='THERAPY' THEN 'T' WHEN @SERVICE_TYPE_NAME='CASUALTY' THEN 'C' WHEN @SERVICE_TYPE_NAME='X-RAY' THEN 'X'  END)	

			AND SM.SERVICE_CATEGORY=(CASE WHEN @CATEGORY_TYPE_NAME='INVESTIGATION' THEN 'I' WHEN @CATEGORY_TYPE_NAME='PROFILE' THEN 'P' WHEN @CATEGORY_TYPE_NAME='BLOOD' THEN 'B'
			WHEN @CATEGORY_TYPE_NAME='Bed Charges' THEN 'B' WHEN @CATEGORY_TYPE_NAME='Nursing' THEN 'N'
			WHEN @CATEGORY_TYPE_NAME='DOCTOR' THEN 'D' WHEN @CATEGORY_TYPE_NAME='PROCEDURE' THEN 'P' 
			WHEN @CATEGORY_TYPE_NAME='Miscellaneous' THEN 'M' 
            WHEN @CATEGORY_TYPE_NAME='OPD' THEN 'O' 
            WHEN @CATEGORY_TYPE_NAME='IPD' THEN 'I'
			WHEN @CATEGORY_TYPE_NAME='THERAPY' THEN 'T'
            WHEN @CATEGORY_TYPE_NAME='CASUALTY' THEN 'C' 
            WHEN @CATEGORY_TYPE_NAME='X-RAY' THEN 'X' END) 

END

ELSE IF(CAST(UPPER(@INPUT_TYPE) AS VARCHAR)='SEARCH_WARDCATEGORY')
	BEGIN
	SELECT CODE,NAME FROM WARD_CATEGORY
		
    END


ELSE IF(CAST(UPPER(@INPUT_TYPE) AS VARCHAR)='SEARCH_BEDCATEGORY')
	BEGIN
	SELECT  CODE,NAME FROM BED_CATEGORY
		
    END

ELSE IF(CAST(UPPER(@INPUT_TYPE) AS VARCHAR)='SEARCH_PAYERDETAILS')
	BEGIN
	SELECT  CODE,NAME FROM PAYER
		
    END
ELSE IF(CAST(UPPER(@INPUT_TYPE) AS VARCHAR)='BIND_ROOMNO')
   BEGIN
      SELECT NAME ,CODE FROM ROOMNO_MASTER WHERE WARD_CODE=@WARD_NO AND STATUS='A'
   END

ELSE IF(CAST(UPPER(@INPUT_TYPE) AS VARCHAR)='BIND_BED_NO')
   BEGIN
      SELECT BED_NO FROM BED_MASTER WHERE ROOM_NO=@ROOM_NO_CODE AND STATUS='A'
	  --AND ISNULL(BED_OCCUPANCY_STATUS,'VACCANT')<>'OCCUPIED'
   END

   ELSE IF(CAST(UPPER(@INPUT_TYPE) AS VARCHAR)='EXISTING_PATIENT_STATUS')
    BEGIN
	  DECLARE @PSTATUS INT = 0

       SET  @PSTATUS = (SELECT TOP 1 DISCHARGE_STATUS FROM IPDADMISSION WHERE UHID=@UHID AND HOSPITAL_ID=@HOSPITAL_ID AND CLINIC_ID=@CLINIC_ID ORDER BY ADMISSION_NO DESC)
	   SET  @ADMISSION_NO = (SELECT TOP 1 ADMISSION_NO FROM IPDADMISSION WHERE UHID=@UHID AND HOSPITAL_ID=@HOSPITAL_ID AND CLINIC_ID=@CLINIC_ID ORDER BY ADMISSION_NO DESC)
	   IF(@PSTATUS = 1 AND @ADMISSION_NO !='')--DISCHARGED PATIENT
	   BEGIN
	       SELECT  @PSTATUS
	   END
	   ELSE IF(@PSTATUS IS NULL AND @ADMISSION_NO !='')
	   BEGIN
		   SELECT 0
	   END
	   ELSE IF(@PSTATUS IS NULL AND @ADMISSION_NO ='')
	    BEGIN
		   SELECT 1
	   END
   END

END
GO


